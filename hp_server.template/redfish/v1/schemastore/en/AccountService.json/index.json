{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "@odata.id": "AccountService",
    "additionalProperties": false,
    "copyright": "Copyright 2014-2019 Hewlett Packard Enterprise Development, LP.  Portions Copyright 2014-2019 Distributed Management Task Force. All rights reserved.",
    "description": "The AccountService resource describes the BMC user account management service. It represents the properties for this service and has links to the list of accounts.",
    "properties": {
        "@odata.context": {
            "$ref": "Resource.json#/definitions/odatacontext"
        },
        "@odata.etag": {
            "$ref": "Resource.json#/definitions/odataetag"
        },
        "@odata.id": {
            "$ref": "Resource.json#/definitions/odataid"
        },
        "@odata.type": {
            "$ref": "Resource.json#/definitions/odatatype"
        },
        "AccountLockoutCounterResetAfter": {
            "description": "The interval of time in seconds between the last failed login attempt and reset of the lockout threshold counter. This value must be less than or equal to AccountLockoutDuration. Reset sets the counter to zero.",
            "minimum": 0,
            "readonly": true,
            "type": "number",
            "units": "s"
        },
        "AccountLockoutCounterResetEnabled": {
            "description": "The value indicates whether the threshold counter will be reset after AccountLockoutCounterResetAfter expires.",
            "readonly": true,
            "type": "boolean"
        },
        "AccountLockoutDuration": {
            "description": "The time in seconds an account is locked out. The value must be greater than or equal to the value of the AccountLockoutCounterResetAfter property. If set to 0, no lockout occurs.",
            "minimum": 2,
            "readonly": false,
            "type": [
                "number",
                "null"
            ],
            "units": "s"
        },
        "AccountLockoutThreshold": {
            "description": "The number of failed login attempts allowed before a user account is locked for a specified duration. A value of 0 means it is never locked.",
            "minimum": 5,
            "readonly": false,
            "type": [
                "number",
                "null"
            ]
        },
        "Accounts": {
            "description": "This property references a resource of type Collection with a MemberType of ManagerAccount.",
            "properties": {
                "@odata.id": {
                    "$ref": "Resource.json#/definitions/odataid"
                }
            },
            "readonly": true,
            "type": "object"
        },
        "ActiveDirectory": {
            "additionalProperties": false,
            "description": "A remote service that can provide accounts for this manager to utilize for authentication.",
            "properties": {
                "AccountProviderType": {
                    "description": "This property contains the type of external account provider this resource references.",
                    "enum": [
                        "ActiveDirectoryService"
                    ],
                    "enumDescriptions": {
                        "ActiveDirectoryService": "An external Active Directory Service."
                    },
                    "readonly": false,
                    "type": "string"
                },
                "Authentication": {
                    "additionalProperties": false,
                    "description": "Contains the authentication information for the external service.",
                    "properties": {
                        "AuthenticationType": {
                            "description": "This property contains the type of authentication used to connect to the external account provider.",
                            "enum": [
                                "UsernameAndPassword"
                            ],
                            "enumDescriptions": {
                                "UsernameAndPassword": "Username and password combination."
                            },
                            "readonly": false,
                            "type": "string"
                        },
                        "Password": {
                            "description": "This property is used with a PATCH or PUT to write the password for the account service.  This property is null on a GET.",
                            "readonly": false,
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "Username": {
                            "description": "This property contains the distinguished name for the account service.",
                            "readonly": false,
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    },
                    "readonly": false,
                    "type": "object"
                },
                "RemoteRoleMapping": {
                    "description": "This property contains a collection of the mapping rules to convert the external account providers account information to the local Redfish Role.",
                    "items": {
                        "additionalProperties": false,
                        "description": "Contains mapping rules to convert the external account providers account information to the local Redfish Role.",
                        "properties": {
                            "LocalRole": {
                                "description": "The name of the local role in which to map the remote user or group.",
                                "readonly": false,
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "RemoteGroup": {
                                "description": "This property is the name of the remote group (or in the case of a Redfish Service, remote role) that will be mapped to the local role referenced by this entity.",
                                "readonly": false,
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        },
                        "readonly": false,
                        "type": "object"
                    },
                    "readonly": false,
                    "type": "array"
                },
                "ServiceAddresses": {
                    "description": "This property contains the addresses of the user account providers this resource references. The format of this field depends on the Type.",
                    "items": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "readonly": false,
                    "type": "array"
                },
                "ServiceEnabled": {
                    "description": "This indicates whether this service is enabled.",
                    "readonly": false,
                    "type": [
                        "boolean",
                        "null"
                    ]
                }
            },
            "readonly": false,
            "type": "object"
        },
        "AuthFailureLoggingThreshold": {
            "description": "The number of authorization failures allowed before the failure attempt is logged to the manager log.",
            "minimum": 0,
            "readonly": false,
            "type": "number"
        },
        "Description": {
            "$ref": "Resource.json#/definitions/Description"
        },
        "Id": {
            "$ref": "Resource.json#/definitions/Id"
        },
        "LDAP": {
            "additionalProperties": false,
            "description": "A remote service that can provide accounts for this manager to utilize for authentication.",
            "properties": {
                "AccountProviderType": {
                    "description": "This property contains the type of external account provider this resource references.",
                    "enum": [
                        "ActiveDirectoryService",
                        "LDAPService"
                    ],
                    "enumDescriptions": {
                        "ActiveDirectoryService": "An external Active Directory Service.",
                        "LDAPService": "A generic external LDAP Service."
                    },
                    "readonly": false,
                    "type": "string"
                },
                "Authentication": {
                    "additionalProperties": false,
                    "description": "Contains the authentication information for the external service.",
                    "properties": {
                        "AuthenticationType": {
                            "description": "This property contains the type of authentication used to connect to the external account provider.",
                            "enum": [
                                "UsernameAndPassword"
                            ],
                            "enumDescriptions": {
                                "UsernameAndPassword": "Username and password combination."
                            },
                            "readonly": false,
                            "type": "string"
                        },
                        "Password": {
                            "description": "This property is used with a PATCH or PUT to write the password for the account service.  This property is null on a GET.",
                            "readonly": false,
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "Username": {
                            "description": "This property contains the distinguished name for the account service.",
                            "readonly": false,
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    },
                    "readonly": false,
                    "type": "object"
                },
                "Certificates": {
                    "description": "A link to a collection of Certificates used for the external account service.",
                    "properties": {
                        "@odata.id": {
                            "$ref": "Resource.json#/definitions/odataid"
                        }
                    },
                    "readonly": true,
                    "type": "object"
                },
                "LDAPService": {
                    "additionalProperties": false,
                    "description": "Contains settings for parsing a generic LDAP service.",
                    "properties": {
                        "SearchSettings": {
                            "additionalProperties": false,
                            "description": "Contains settings for searching a generic LDAP service.",
                            "properties": {
                                "BaseDistinguishedNames": {
                                    "description": "The base distinguished names to use when searching the LDAP service.",
                                    "items": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "readonly": false,
                                    "type": "array"
                                }
                            },
                            "readonly": false,
                            "type": "object"
                        }
                    },
                    "readonly": false,
                    "type": "object"
                },
                "RemoteRoleMapping": {
                    "description": "This property contains a collection of the mapping rules to convert the external account providers account information to the local Redfish Role.",
                    "items": {
                        "additionalProperties": false,
                        "description": "Contains mapping rules to convert the external account providers account information to the local Redfish Role.",
                        "properties": {
                            "LocalRole": {
                                "description": "The name of the local role in which to map the remote user or group.",
                                "readonly": false,
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "RemoteGroup": {
                                "description": "This property is the name of the remote group (or in the case of a Redfish Service, remote role) that will be mapped to the local role referenced by this entity.",
                                "readonly": false,
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        },
                        "readonly": false,
                        "type": "object"
                    },
                    "readonly": false,
                    "type": "array"
                },
                "ServiceAddresses": {
                    "description": "This property contains the addresses of the user account providers this resource references. The format of this field depends on the Type.",
                    "items": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "readonly": false,
                    "type": "array"
                },
                "ServiceEnabled": {
                    "description": "This indicates whether this service is enabled.",
                    "readonly": false,
                    "type": [
                        "boolean",
                        "null"
                    ]
                }
            },
            "readonly": false,
            "type": "object"
        },
        "LocalAccountAuth": {
            "description": "Controls when this service will use the accounts defined withing this AccountService as part of authentication.",
            "enum": [
                "Enabled",
                "Disabled"
            ],
            "enumDescriptions": {
                "Disabled": "Authentication via accounts defined in this AccountService is disabled.",
                "Enabled": "Authentication via accounts defined in this AccountService is enabled.",
                "Fallback": "Authentication via accounts defined in this AccountService is only used if there are external account providers that are currently unreachable."
            },
            "readonly": false,
            "type": "string"
        },
        "MaxPasswordLength": {
            "description": "The maximum password length for this service.",
            "minimum": 0,
            "readonly": true,
            "type": "number"
        },
        "MinPasswordLength": {
            "description": "The minimum password length for this account service.",
            "longDescription": "This property shall contain the minimum password length that the implementation allows for this account service.",
            "minimum": 0,
            "readonly": true,
            "type": "integer"
        },
        "Name": {
            "$ref": "Resource.json#/definitions/Name"
        },
        "Oem": {
            "additionalProperties": true,
            "properties": {
                "Hpe": {
                    "$ref": "HpeiLOAccountService.json#",
                    "readonly": false
                }
            },
            "readonly": false,
            "type": "object"
        },
        "Roles": {
            "description": "A link to a collection of Roles.",
            "properties": {
                "@odata.id": {
                    "$ref": "Resource.json#/definitions/odataid"
                }
            },
            "readonly": true,
            "type": "object"
        }
    },
    "readonly": false,
    "title": "#AccountService.v1_5_0.AccountService",
    "type": "object"
}