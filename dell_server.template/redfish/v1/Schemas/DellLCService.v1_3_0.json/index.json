{
    "$id": "/redfish/v1/Schemas/DellLCService.v1_3_0.json",
    "$ref": "#/definitions/DellLCService",
    "$schema": "/redfish/v1/Schemas/redfish-schema-v1.json",
    "copyright": "Copyright 2014-2020 Dell, Inc. or its subsidiaries. All Rights Reserved.",
    "definitions": {
        "Actions": {
            "additionalProperties": false,
            "description": "The available actions for this resource.",
            "longDescription": "This type shall contain the available actions for this resource.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "#DellLCService.ClearProvisioningServer": {
                    "$ref": "#/definitions/ClearProvisioningServer"
                },
                "#DellLCService.DeleteAutoDiscoveryClientCerts": {
                    "$ref": "#/definitions/DeleteAutoDiscoveryClientCerts"
                },
                "#DellLCService.DeleteAutoDiscoveryServerPublicKey": {
                    "$ref": "#/definitions/DeleteAutoDiscoveryServerPublicKey"
                },
                "#DellLCService.DownloadClientCerts": {
                    "$ref": "#/definitions/DownloadClientCerts"
                },
                "#DellLCService.ExportCompleteLCLog": {
                    "$ref": "#/definitions/ExportCompleteLCLog"
                },
                "#DellLCService.ExportFactoryConfiguration": {
                    "$ref": "#/definitions/ExportFactoryConfiguration"
                },
                "#DellLCService.ExportHWInventory": {
                    "$ref": "#/definitions/ExportHWInventory"
                },
                "#DellLCService.ExportLCLog": {
                    "$ref": "#/definitions/ExportLCLog"
                },
                "#DellLCService.ExportSVGFile": {
                    "$ref": "#/definitions/ExportSVGFile"
                },
                "#DellLCService.ExportServerScreenShot": {
                    "$ref": "#/definitions/ExportServerScreenShot"
                },
                "#DellLCService.ExportTechSupportReport": {
                    "$ref": "#/definitions/ExportTechSupportReport"
                },
                "#DellLCService.ExportVideoLog": {
                    "$ref": "#/definitions/ExportVideoLog"
                },
                "#DellLCService.ExportePSADiagnosticsResult": {
                    "$ref": "#/definitions/ExportePSADiagnosticsResult"
                },
                "#DellLCService.ExposeiSMInstallerToHostOS": {
                    "$ref": "#/definitions/ExposeiSMInstallerToHostOS"
                },
                "#DellLCService.GetRSStatus": {
                    "$ref": "#/definitions/GetRSStatus"
                },
                "#DellLCService.GetRemoteServicesAPIStatus": {
                    "$ref": "#/definitions/GetRemoteServicesAPIStatus"
                },
                "#DellLCService.InsertCommentInLCLog": {
                    "$ref": "#/definitions/InsertCommentInLCLog"
                },
                "#DellLCService.LCWipe": {
                    "$ref": "#/definitions/LCWipe"
                },
                "#DellLCService.ReInitiateAutoDiscovery": {
                    "$ref": "#/definitions/ReInitiateAutoDiscovery"
                },
                "#DellLCService.ReInitiateDHS": {
                    "$ref": "#/definitions/ReInitiateDHS"
                },
                "#DellLCService.RunePSADiagnostics": {
                    "$ref": "#/definitions/RunePSADiagnostics"
                },
                "#DellLCService.SupportAssistAcceptEULA": {
                    "$ref": "#/definitions/SupportAssistAcceptEULA"
                },
                "#DellLCService.SupportAssistClearAutoCollectSchedule": {
                    "$ref": "#/definitions/SupportAssistClearAutoCollectSchedule"
                },
                "#DellLCService.SupportAssistCollection": {
                    "$ref": "#/definitions/SupportAssistCollection"
                },
                "#DellLCService.SupportAssistExportLastCollection": {
                    "$ref": "#/definitions/SupportAssistExportLastCollection"
                },
                "#DellLCService.SupportAssistGetAutoCollectSchedule": {
                    "$ref": "#/definitions/SupportAssistGetAutoCollectSchedule"
                },
                "#DellLCService.SupportAssistGetEULAStatus": {
                    "$ref": "#/definitions/SupportAssistGetEULAStatus"
                },
                "#DellLCService.SupportAssistRegister": {
                    "$ref": "#/definitions/SupportAssistRegister"
                },
                "#DellLCService.SupportAssistSetAutoCollectSchedule": {
                    "$ref": "#/definitions/SupportAssistSetAutoCollectSchedule"
                },
                "#DellLCService.SupportAssistUploadLastCollection": {
                    "$ref": "#/definitions/SupportAssistUploadLastCollection"
                },
                "#DellLCService.SystemErase": {
                    "$ref": "#/definitions/SystemErase"
                },
                "#DellLCService.TestNetworkShare": {
                    "$ref": "#/definitions/TestNetworkShare"
                },
                "#DellLCService.UpdateOSAppHealthData": {
                    "$ref": "#/definitions/UpdateOSAppHealthData"
                }
            },
            "type": "object"
        },
        "ClearProvisioningServer": {
            "additionalProperties": false,
            "description": "The ClearProvisioningServer() method is used for clearing the provisioning server values.",
            "longDescription": "The ClearProvisioningServer() method is used for clearing the provisioning server values.",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeleteAutoDiscoveryClientCerts": {
            "additionalProperties": false,
            "description": "The DeleteAutoDiscoveryClientCerts() method is used for wiping all configurations from Lifecycle Controller before the system is retired.",
            "longDescription": "The DeleteAutoDiscoveryClientCerts() method is used for wiping all configurations from Lifecycle Controller before the system is retired.",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "DeleteAutoDiscoveryServerPublicKey": {
            "additionalProperties": false,
            "description": "The DeleteAutoDiscoveryServerPublicKey() method is used for deleting the server public key set previously by the auto discovery method.",
            "longDescription": "The DeleteAutoDiscoveryServerPublicKey() method is used for deleting the server public key set previously by the auto discovery method.",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "DellLCService": {
            "additionalProperties": false,
            "description": "The DellLCService resource provides some actions to support Lifecycle Controller functionality.",
            "longDescription": "The DellLCService resource provides some actions to support Lifecycle Controller functionality.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "@odata.context": {
                    "$ref": "/redfish/v1/Schemas/odata-v4.json#/definitions/context"
                },
                "@odata.etag": {
                    "$ref": "/redfish/v1/Schemas/odata-v4.json#/definitions/etag"
                },
                "@odata.id": {
                    "$ref": "/redfish/v1/Schemas/odata-v4.json#/definitions/id"
                },
                "@odata.type": {
                    "$ref": "/redfish/v1/Schemas/odata-v4.json#/definitions/type"
                },
                "Actions": {
                    "$ref": "#/definitions/Actions",
                    "description": "The available actions for this resource.",
                    "longDescription": "The Actions property shall contain the available actions for this resource."
                },
                "Description": {
                    "anyOf": [
                        {
                            "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Description"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "readonly": true
                },
                "Id": {
                    "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Id",
                    "readonly": true
                },
                "Name": {
                    "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Name",
                    "readonly": true
                },
                "Oem": {
                    "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Oem",
                    "description": "The OEM extension property.",
                    "longDescription": "This property shall contain the OEM extensions.  All values for properties that this object contains shall conform to the Redfish Specification-described requirements."
                }
            },
            "required": [
                "@odata.id",
                "@odata.type",
                "Id",
                "Name"
            ],
            "type": "object"
        },
        "DownloadClientCerts": {
            "additionalProperties": false,
            "description": "DownloadClientCerts() is used for copying a CA certificate and private key to the iDRAC to sign the iDRAC certificate. When this command is issued the iDRAC will generate a new auto-discovery client certificate and sign it using the CA cert and private key. After this, the CA certificate has be added to the provisioning server trusted Root CA list before performing auto-discovery.",
            "longDescription": "DownloadClientCerts() is used for copying a CA certificate and private key to the iDRAC to sign the iDRAC certificate. When this command is issued the iDRAC will generate a new auto-discovery client certificate and sign it using the CA cert and private key. After this, the CA certificate has be added to the provisioning server trusted Root CA list before performing auto-discovery.",
            "parameters": {
                "CAContent": {
                    "description": "base64 encoded string containing CA Certificate content.",
                    "longDescription": "base64 encoded string containing CA Certificate content.",
                    "type": "string"
                },
                "CAHash": {
                    "description": "Not documented",
                    "longDescription": "Not documented",
                    "type": "string"
                },
                "HashType": {
                    "description": "Not documented",
                    "longDescription": "Not documented",
                    "type": "integer"
                },
                "KeyContent": {
                    "description": "base64 encoded string containing the CA private key content.",
                    "longDescription": "base64 encoded string containing the CA private key content.",
                    "type": "string"
                },
                "KeyHash": {
                    "description": "Not documented",
                    "longDescription": "Not documented",
                    "type": "string"
                },
                "PWHash": {
                    "description": "Not documented",
                    "longDescription": "Not documented",
                    "type": "string"
                },
                "Password": {
                    "description": "CA private key password.",
                    "longDescription": "CA private key password.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "ExportCompleteLCLog": {
            "additionalProperties": false,
            "description": "The ExportCompleteLCLog() method is used for exporting the log from the Lifecycle Controller to a remote share.",
            "longDescription": "The ExportCompleteLCLog() method is used for exporting the log from the Lifecycle Controller to a remote share.",
            "parameters": {
                "FileName": {
                    "description": "The target output file name. FileName is not required if share type is Local.",
                    "longDescription": "The target output file name. FileName is not required if share type is Local.",
                    "type": "string"
                },
                "IPAddress": {
                    "description": "The IP address of the target export server. IP address is not required if share type is Local.",
                    "longDescription": "The IP address of the target export server. IP address is not required if share type is Local.",
                    "type": "string"
                },
                "IgnoreCertWarning": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/IgnoreCertWarning",
                    "description": "Specifies if certificate warning should be ignored when HTTPS is specified. If IgnoreCertWarning is On, warnings are ignored. Default is 2 (On).",
                    "longDescription": "Specifies if certificate warning should be ignored when HTTPS is specified. If IgnoreCertWarning is On, warnings are ignored. Default is 2 (On)."
                },
                "Password": {
                    "description": "Password of the account to access the share.",
                    "longDescription": "Password of the account to access the share.",
                    "type": "string"
                },
                "ProxyPasswd": {
                    "description": "The password for the proxy server.",
                    "longDescription": "The password for the proxy server.",
                    "type": "string"
                },
                "ProxyPort": {
                    "description": "Port for the proxy server. Default is set to 80.",
                    "longDescription": "Port for the proxy server. Default is set to 80.",
                    "type": "string"
                },
                "ProxyServer": {
                    "description": "The IP address of the proxy server.",
                    "longDescription": "The IP address of the proxy server.",
                    "type": "string"
                },
                "ProxySupport": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ProxySupport",
                    "description": "Specifies if proxy should be used. Default is 1 (Off).",
                    "longDescription": "Specifies if proxy should be used. Default is 1 (Off)."
                },
                "ProxyType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ProxyType",
                    "description": "The proxy type of the proxy server. Default is 0 (HTTP).",
                    "longDescription": "The proxy type of the proxy server. Default is 0 (HTTP)."
                },
                "ProxyUname": {
                    "description": "The user name for the proxy server.",
                    "longDescription": "The user name for the proxy server.",
                    "type": "string"
                },
                "ShareName": {
                    "description": "Name of the CIFS share or full path to the NFS share. Optional for HTTP/HTTPS share (if supported), this may be treated as the path of the directory containing the file.",
                    "longDescription": "Name of the CIFS share or full path to the NFS share. Optional for HTTP/HTTPS share (if supported), this may be treated as the path of the directory containing the file.",
                    "type": "string"
                },
                "ShareType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ShareType",
                    "description": "Type of the network share.",
                    "longDescription": "Type of the network share."
                },
                "UserName": {
                    "description": "UserName of the account to access the share.",
                    "longDescription": "UserName of the account to access the share.",
                    "type": "string"
                },
                "Workgroup": {
                    "description": "Workgroup for the CIFS share - optional.",
                    "longDescription": "Workgroup for the CIFS share - optional.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "ExportFactoryConfiguration": {
            "additionalProperties": false,
            "description": "The ExportFactoryConfiguration() method is used for exporting the factory configuration from Lifecycle Controller to a remote share.",
            "longDescription": "The ExportFactoryConfiguration() method is used for exporting the factory configuration from Lifecycle Controller to a remote share.",
            "parameters": {
                "FileName": {
                    "description": "The target output file name. FileName is not required if share type is Local.",
                    "longDescription": "The target output file name. FileName is not required if share type is Local.",
                    "type": "string"
                },
                "IPAddress": {
                    "description": "IP address of the network share. IP address is not required if share type is Local.",
                    "longDescription": "IP address of the network share. IP address is not required if share type is Local.",
                    "type": "string"
                },
                "IgnoreCertWarning": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/IgnoreCertWarning",
                    "description": "Specifies if certificate warning should be ignored when HTTPS is specified. If IgnoreCertWarning is On, warnings are ignored. Default is 2 (On).",
                    "longDescription": "Specifies if certificate warning should be ignored when HTTPS is specified. If IgnoreCertWarning is On, warnings are ignored. Default is 2 (On)."
                },
                "Password": {
                    "description": "Password of the account to access the share.",
                    "longDescription": "Password of the account to access the share.",
                    "type": "string"
                },
                "ProxyPasswd": {
                    "description": "The password for the proxy server.",
                    "longDescription": "The password for the proxy server.",
                    "type": "string"
                },
                "ProxyPort": {
                    "description": "Port for the proxy server. Default is set to 80.",
                    "longDescription": "Port for the proxy server. Default is set to 80.",
                    "type": "string"
                },
                "ProxyServer": {
                    "description": "The IP address of the proxy server.",
                    "longDescription": "The IP address of the proxy server.",
                    "type": "string"
                },
                "ProxySupport": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ProxySupport",
                    "description": "Specifies if proxy should be used. Default is 1 (Off).",
                    "longDescription": "Specifies if proxy should be used. Default is 1 (Off)."
                },
                "ProxyType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ProxyType",
                    "description": "The proxy type of the proxy server. Default is 0 (HTTP).",
                    "longDescription": "The proxy type of the proxy server. Default is 0 (HTTP)."
                },
                "ProxyUname": {
                    "description": "The user name for the proxy server.",
                    "longDescription": "The user name for the proxy server.",
                    "type": "string"
                },
                "ShareName": {
                    "description": "Name of the CIFS share or full path to the NFS share. Optional for HTTP/HTTPS share (if supported), this may be treated as the path of the directory containing the file.",
                    "longDescription": "Name of the CIFS share or full path to the NFS share. Optional for HTTP/HTTPS share (if supported), this may be treated as the path of the directory containing the file.",
                    "type": "string"
                },
                "ShareType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ShareType",
                    "description": "Type of the network share.",
                    "longDescription": "Type of the network share."
                },
                "UserName": {
                    "description": "UserName of the account to access the share.",
                    "longDescription": "UserName of the account to access the share.",
                    "type": "string"
                },
                "Workgroup": {
                    "description": "Workgroup for the CIFS share - optional.",
                    "longDescription": "Workgroup for the CIFS share - optional.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExportHWInventory": {
            "additionalProperties": false,
            "description": "The ExportHWInventory() method is used for exporting the hardware inventory from the Lifecycle Controller to a remote share.",
            "longDescription": "The ExportHWInventory() method is used for exporting the hardware inventory from the Lifecycle Controller to a remote share.",
            "parameters": {
                "FileName": {
                    "description": "The target output file name. FileName is not required if share type is Local.",
                    "longDescription": "The target output file name. FileName is not required if share type is Local.",
                    "type": "string"
                },
                "IPAddress": {
                    "description": "IP address of the network share. IPAddress is not required if share type is Local.",
                    "longDescription": "IP address of the network share. IPAddress is not required if share type is Local.",
                    "type": "string"
                },
                "IgnoreCertWarning": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/IgnoreCertWarning",
                    "description": "Specifies if certificate warning should be ignored when HTTPS is specified. If IgnoreCertWarning is On, warnings are ignored. Default is 2 (On).",
                    "longDescription": "Specifies if certificate warning should be ignored when HTTPS is specified. If IgnoreCertWarning is On, warnings are ignored. Default is 2 (On)."
                },
                "Password": {
                    "description": "Password of the account to access the share.",
                    "longDescription": "Password of the account to access the share.",
                    "type": "string"
                },
                "ProxyPasswd": {
                    "description": "The password for the proxy server.",
                    "longDescription": "The password for the proxy server.",
                    "type": "string"
                },
                "ProxyPort": {
                    "description": "Port for the proxy server. Default is set to 80.",
                    "longDescription": "Port for the proxy server. Default is set to 80.",
                    "type": "string"
                },
                "ProxyServer": {
                    "description": "The IP address of the proxy server.",
                    "longDescription": "The IP address of the proxy server.",
                    "type": "string"
                },
                "ProxySupport": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ProxySupport",
                    "description": "Specifies if proxy should be used. Default is 1 (Off).",
                    "longDescription": "Specifies if proxy should be used. Default is 1 (Off)."
                },
                "ProxyType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ProxyType",
                    "description": "The proxy type of the proxy server. Default is 0 (HTTP).",
                    "longDescription": "The proxy type of the proxy server. Default is 0 (HTTP)."
                },
                "ProxyUname": {
                    "description": "The user name for the proxy server.",
                    "longDescription": "The user name for the proxy server.",
                    "type": "string"
                },
                "ShareName": {
                    "description": "Name of the CIFS share or full path to the NFS share. Optional for HTTP/HTTPS share (if supported), this may be treated as the path of the directory containing the file. ShareName is not required if share type is Local.",
                    "longDescription": "Name of the CIFS share or full path to the NFS share. Optional for HTTP/HTTPS share (if supported), this may be treated as the path of the directory containing the file. ShareName is not required if share type is Local.",
                    "type": "string"
                },
                "ShareType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ShareType",
                    "description": "Type of the network share.",
                    "longDescription": "Type of the network share."
                },
                "UserName": {
                    "description": "UserName of the account to access the share.",
                    "longDescription": "UserName of the account to access the share.",
                    "type": "string"
                },
                "Workgroup": {
                    "description": "Workgroup for the CIFS share - optional.",
                    "longDescription": "Workgroup for the CIFS share - optional.",
                    "type": "string"
                },
                "XMLSchema": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/XMLSchema",
                    "description": "Type of XML output format. Default is CIM-XML.",
                    "longDescription": "Type of XML output format. Default is CIM-XML."
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExportLCLog": {
            "additionalProperties": false,
            "description": "The ExportLCLog() method is used for exporting the log from the Lifecycle Controller to a remote share.",
            "longDescription": "The ExportLCLog() method is used for exporting the log from the Lifecycle Controller to a remote share.",
            "parameters": {
                "FileName": {
                    "description": "The target output file name. FileName is not required if share type is Local.",
                    "longDescription": "The target output file name. FileName is not required if share type is Local.",
                    "type": "string"
                },
                "IPAddress": {
                    "description": "IP address of the network share. IP address is not required if share type is Local.",
                    "longDescription": "IP address of the network share. IP address is not required if share type is Local.",
                    "type": "string"
                },
                "IgnoreCertWarning": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/IgnoreCertWarning",
                    "description": "Specifies if certificate warning should be ignored when HTTPS is specified. If IgnoreCertWarning is On, warnings are ignored. Default is 2 (On).",
                    "longDescription": "Specifies if certificate warning should be ignored when HTTPS is specified. If IgnoreCertWarning is On, warnings are ignored. Default is 2 (On)."
                },
                "Password": {
                    "description": "Password of the account to access the share.",
                    "longDescription": "Password of the account to access the share.",
                    "type": "string"
                },
                "ProxyPasswd": {
                    "description": "The password for the proxy server.",
                    "longDescription": "The password for the proxy server.",
                    "type": "string"
                },
                "ProxyPort": {
                    "description": "Port for the proxy server. Default is set to 80.",
                    "longDescription": "Port for the proxy server. Default is set to 80.",
                    "type": "string"
                },
                "ProxyServer": {
                    "description": "The IP address of the proxy server.",
                    "longDescription": "The IP address of the proxy server.",
                    "type": "string"
                },
                "ProxySupport": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ProxySupport",
                    "description": "Specifies if proxy should be used. Default is 1 (Off).",
                    "longDescription": "Specifies if proxy should be used. Default is 1 (Off)."
                },
                "ProxyType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ProxyType",
                    "description": "The proxy type of the proxy server. Default is 0 (HTTP).",
                    "longDescription": "The proxy type of the proxy server. Default is 0 (HTTP)."
                },
                "ProxyUname": {
                    "description": "The user name for the proxy server.",
                    "longDescription": "The user name for the proxy server.",
                    "type": "string"
                },
                "ShareName": {
                    "description": "Name of the CIFS share or full path to the NFS share. Optional for HTTP/HTTPS shares (if supported), this may be treated as the path of the directory containing the file.",
                    "longDescription": "Name of the CIFS share or full path to the NFS share. Optional for HTTP/HTTPS shares (if supported), this may be treated as the path of the directory containing the file.",
                    "type": "string"
                },
                "ShareType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ShareType",
                    "description": "Type of the network share.",
                    "longDescription": "Type of the network share."
                },
                "UserName": {
                    "description": "UserName of the account to access the share.",
                    "longDescription": "UserName of the account to access the share.",
                    "type": "string"
                },
                "Workgroup": {
                    "description": "Workgroup for the CIFS share - optional.",
                    "longDescription": "Workgroup for the CIFS share - optional.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExportSVGFile": {
            "additionalProperties": false,
            "description": "This method is used for exporting the SVG file from the iDRAC.",
            "longDescription": "This method is used for exporting the SVG file from the iDRAC.",
            "parameters": {
                "ShareType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ShareType",
                    "description": "Type of the network share.",
                    "longDescription": "Type of the network share."
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "ExportServerScreenShot": {
            "actionResponse": {
                "$ref": "#/definitions/ExportServerScreenShotResponse"
            },
            "additionalProperties": false,
            "description": "The ExportServerScreenShot() method is used for exporting preview page of server or server screen shot file from the iDRAC to management application local store in encoded base64 format.",
            "longDescription": "The ExportServerScreenShot() method is used for exporting preview page of server or server screen shot file from the iDRAC to management application local store in encoded base64 format.",
            "parameters": {
                "FileType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/FileType",
                    "description": "Type of screen shot required.",
                    "longDescription": "Type of screen shot required."
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "ExportServerScreenShotResponse": {
            "additionalProperties": false,
            "description": "The response body for the ExportServerScreenShot action.",
            "longDescription": "This type shall contain the properties found in the response body for the ExportServerScreenShot action.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "ServerScreenShotFile": {
                    "description": "Exported server screen shot file encoded in base64.",
                    "longDescription": "Exported server screen shot file encoded in base64.",
                    "readonly": true,
                    "type": "string",
                    "versionAdded": "v1_1_0"
                }
            },
            "required": [
                "ServerScreenShotFile"
            ],
            "type": "object"
        },
        "ExportTechSupportReport": {
            "additionalProperties": false,
            "description": "This method is used to collect the TSR that incudes hardware, OS, and application data. The data is compressed into a zip file and saved on the remote share (CIFS/NFS ).",
            "longDescription": "This method is used to collect the TSR that incudes hardware, OS, and application data. The data is compressed into a zip file and saved on the remote share (CIFS/NFS ).",
            "parameters": {
                "DataSelectorArrayIn": {
                    "description": "DataSelectorArrayIn to select the data.",
                    "items": {
                        "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/DataSelectorArrayIn"
                    },
                    "longDescription": "DataSelectorArrayIn to select the data.",
                    "type": "array"
                },
                "IPAddress": {
                    "description": "IP address of the network share.",
                    "longDescription": "IP address of the network share.",
                    "type": "string"
                },
                "Password": {
                    "description": "Password of the account to access the share.",
                    "longDescription": "Password of the account to access the share.",
                    "type": "string"
                },
                "ShareName": {
                    "description": "Name of the CIFS share or full path to the NFS share. Optional for HTTP/HTTPS share (if supported), this may be treated as the path of the directory containing the file.",
                    "longDescription": "Name of the CIFS share or full path to the NFS share. Optional for HTTP/HTTPS share (if supported), this may be treated as the path of the directory containing the file.",
                    "type": "string"
                },
                "ShareType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ShareType",
                    "description": "Type of the network share.",
                    "longDescription": "Type of the network share."
                },
                "UserName": {
                    "description": "UserName of the account to access the share.",
                    "longDescription": "UserName of the account to access the share.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExportVideoLog": {
            "additionalProperties": false,
            "description": "This method is used to export the bootcapture or crashcapture from iDRAC to a local folder. The ExportVideoLog() method is used to export the bootcapture or crashcapture from iDRAC to a local folder.",
            "longDescription": "This method is used to export the bootcapture or crashcapture from iDRAC to a local folder. The ExportVideoLog() method is used to export the bootcapture or crashcapture from iDRAC to a local folder.",
            "parameters": {
                "FileType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/FileType",
                    "description": "FileType is used to select the bootcapture or crashcapture.",
                    "longDescription": "FileType is used to select the bootcapture or crashcapture."
                },
                "ShareType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ShareType",
                    "description": "Type of the network share.",
                    "longDescription": "Type of the network share."
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "ExportePSADiagnosticsResult": {
            "additionalProperties": false,
            "description": "This method exports the result file of the last completed diagnostics to a remote share (CIFS/NFS). The result file includes time stamps to show when the diagnostics was run.",
            "longDescription": "This method exports the result file of the last completed diagnostics to a remote share (CIFS/NFS). The result file includes time stamps to show when the diagnostics was run.",
            "parameters": {
                "FileName": {
                    "description": "Diagnostic Result File name. FileName is not required if share type is Local.",
                    "longDescription": "Diagnostic Result File name. FileName is not required if share type is Local.",
                    "type": "string"
                },
                "IPAddress": {
                    "description": "IP address of the network share. IP address is not required if share type is Local.",
                    "longDescription": "IP address of the network share. IP address is not required if share type is Local.",
                    "type": "string"
                },
                "IgnoreCertWarning": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/IgnoreCertWarning",
                    "description": "Specifies if certificate warning should be ignored when HTTPS is specified. If IgnoreCertWarning is On, warnings are ignored. Default is 2 (On).",
                    "longDescription": "Specifies if certificate warning should be ignored when HTTPS is specified. If IgnoreCertWarning is On, warnings are ignored. Default is 2 (On)."
                },
                "Password": {
                    "description": "Password of the account to access the share.",
                    "longDescription": "Password of the account to access the share.",
                    "type": "string"
                },
                "ProxyPasswd": {
                    "description": "The password to login into proxy server.",
                    "longDescription": "The password to login into proxy server.",
                    "type": "string"
                },
                "ProxyPort": {
                    "description": "Port for the proxy server. Default is set to 80.",
                    "longDescription": "Port for the proxy server. Default is set to 80.",
                    "type": "string"
                },
                "ProxyServer": {
                    "description": "The IP address of the proxy server.",
                    "longDescription": "The IP address of the proxy server.",
                    "type": "string"
                },
                "ProxySupport": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ProxySupport",
                    "description": "Specifies if proxy should be used. Default is 1 (Off).",
                    "longDescription": "Specifies if proxy should be used. Default is 1 (Off)."
                },
                "ProxyType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ProxyType",
                    "description": "The proxy type of the proxy server. Default is 0 (HTTP).",
                    "longDescription": "The proxy type of the proxy server. Default is 0 (HTTP)."
                },
                "ProxyUname": {
                    "description": "The user name for the proxy server.",
                    "longDescription": "The user name for the proxy server.",
                    "type": "string"
                },
                "ShareName": {
                    "description": "Name of the CIFS share or full path to the NFS share. Optional for HTTP/HTTPS share (if supported), this may be treated as the path of the directory containing the file. ShareName is not required if share type is Local.",
                    "longDescription": "Name of the CIFS share or full path to the NFS share. Optional for HTTP/HTTPS share (if supported), this may be treated as the path of the directory containing the file. ShareName is not required if share type is Local.",
                    "type": "string"
                },
                "ShareType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ShareType",
                    "description": "Type of the network share.",
                    "longDescription": "Type of the network share."
                },
                "UserName": {
                    "description": "UserName of the account to access the share.",
                    "longDescription": "UserName of the account to access the share.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "ExposeiSMInstallerToHostOS": {
            "additionalProperties": false,
            "description": "This method is used to initiate the iSM install in host OS by exposing the iSM installer to the host OS in a virtual USB device labelled INSTSM. The iSM DUP must be copied to /mmc2/mas028 path on iDRAC.",
            "longDescription": "This method is used to initiate the iSM install in host OS by exposing the iSM installer to the host OS in a virtual USB device labelled INSTSM. The iSM DUP must be copied to /mmc2/mas028 path on iDRAC.",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_2_0"
        },
        "GetRSStatus": {
            "actionResponse": {
                "$ref": "#/definitions/GetRSStatusResponse"
            },
            "additionalProperties": false,
            "description": "The GetRSStatus() method is used for obtaining the Data Manager (Remote Services) status. Note: The GetRemoteServicesAPIStatus() method execution reports more granular and detailed status of the Remote Services API.",
            "longDescription": "The GetRSStatus() method is used for obtaining the Data Manager (Remote Services) status. Note: The GetRemoteServicesAPIStatus() method execution reports more granular and detailed status of the Remote Services API.",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GetRSStatusResponse": {
            "additionalProperties": false,
            "description": "The response body for the GetRSStatus action.",
            "longDescription": "This type shall contain the properties found in the response body for the GetRSStatus action.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "Status": {
                    "description": "The status for the Data Manager: Ready, Not Ready, Reloading.",
                    "longDescription": "The status for the Data Manager: Ready, Not Ready, Reloading.",
                    "readonly": true,
                    "type": "string"
                }
            },
            "required": [
                "Status"
            ],
            "type": "object"
        },
        "GetRemoteServicesAPIStatus": {
            "actionResponse": {
                "$ref": "#/definitions/GetRemoteServicesAPIStatusResponse"
            },
            "additionalProperties": false,
            "description": "The GetRemoteServicesAPIStatus() method is used for obtaining the overall remote services API status that includes host system status, the remote services (Data Manager) status, and real-time status. The overall rolled up status is reflected in the Status output parameter. Note: The LCStatus output parameter value includes the status reported by the DMStatus output parameter in the GetRSStatus() method and the Lifecycle Controller status. Thus, GetRSStatus() method invocation is redundant.",
            "longDescription": "The GetRemoteServicesAPIStatus() method is used for obtaining the overall remote services API status that includes host system status, the remote services (Data Manager) status, and real-time status. The overall rolled up status is reflected in the Status output parameter. Note: The LCStatus output parameter value includes the status reported by the DMStatus output parameter in the GetRSStatus() method and the Lifecycle Controller status. Thus, GetRSStatus() method invocation is redundant.",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GetRemoteServicesAPIStatusResponse": {
            "additionalProperties": false,
            "description": "The response body for the GetRemoteServicesAPIStatus action.",
            "longDescription": "This type shall contain the properties found in the response body for the GetRemoteServicesAPIStatus action.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "LCStatus": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/GetRemoteServicesAPIStatusResponseLCStatus",
                    "description": "The Lifecycle Controller status that includes the Data Manager status.",
                    "longDescription": "The Lifecycle Controller status that includes the Data Manager status.",
                    "readonly": true
                },
                "RTStatus": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/GetRemoteServicesAPIStatusResponseRTStatus",
                    "description": "The RealTime Status of the host server.",
                    "longDescription": "The RealTime Status of the host server.",
                    "readonly": true
                },
                "ServerStatus": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/GetRemoteServicesAPIStatusResponseServerStatus",
                    "description": "Status of the host server.",
                    "longDescription": "Status of the host server.",
                    "readonly": true
                },
                "Status": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/GetRemoteServicesAPIStatusResponseStatus",
                    "description": "The overall status of the Remote Services API.",
                    "longDescription": "The overall status of the Remote Services API.",
                    "readonly": true
                },
                "TelemetryServiceStatus": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/GetRemoteServicesAPIStatusResponseTelemetryServiceStatus",
                    "description": "The status of TelemetryService.",
                    "longDescription": "The status of TelemetryService.",
                    "readonly": true
                }
            },
            "required": [
                "LCStatus",
                "RTStatus",
                "ServerStatus",
                "Status",
                "TelemetryServiceStatus"
            ],
            "type": "object"
        },
        "InsertCommentInLCLog": {
            "additionalProperties": false,
            "description": "This method adds Worknotes and insert Comments into existing LCLog entries. If a LogSequenceNumber is passed, the Comment is inserted into the corresponding entry. If not passed, a new Worknote is created in the LCLogs with the Description given in Comment.",
            "longDescription": "This method adds Worknotes and insert Comments into existing LCLog entries. If a LogSequenceNumber is passed, the Comment is inserted into the corresponding entry. If not passed, a new Worknote is created in the LCLogs with the Description given in Comment.",
            "parameters": {
                "Comment": {
                    "description": "Comment/Worknote message to be inserted in the Lifecycle Controller log.",
                    "longDescription": "Comment/Worknote message to be inserted in the Lifecycle Controller log.",
                    "type": "string"
                },
                "LogSequenceNumber": {
                    "description": "SequenceNumber of the LC Log entry into which comment needs to be inserted.",
                    "longDescription": "SequenceNumber of the LC Log entry into which comment needs to be inserted.",
                    "type": "integer"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "LCWipe": {
            "additionalProperties": false,
            "description": "The LCWipe() method is used for deleting all configurations from Lifecycle Controller before the system is retired. Host must be manually rebooted for the changes to take effect.",
            "longDescription": "The LCWipe() method is used for deleting all configurations from Lifecycle Controller before the system is retired. Host must be manually rebooted for the changes to take effect.",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ReInitiateAutoDiscovery": {
            "additionalProperties": false,
            "description": "The ReInitiateAutoDiscovery() method is used for reinitiating the discovery and handshake with static IP configuration. If the method successfully executes, iDRAC is in the static IP mode after the auto-discovery is initiated and thus, does not require DHCP setup. The static IP information for auto-discovery can be set either through the optional input parameters of this method or through the iDRAC attributes in the iDRAC Card Profile. After the successful auto-discovery initiation, if the IPAddress parameter has non-NULL value, the iDRAC IPv4 address is set to that parameter's value, otherwise the iDRAC IPv4 Address is set to the Address attribute in the IPv4 Information group in the iDRAC Card Profile. After the successful auto-discovery initiation, if the Mask parameter has a non-NULL value, the iDRAC IPv4 address net mask is set to that parameter's value, otherwise the iDRAC IPv4 address net mask is set to the to the Netmask attribute in the IPv4 Information group in the iDRAC Card Profile. After the successful auto-discovery initiation, if the Gateway parameter has non-NULL value, then the iDRAC IPv4 gateway address is set to that parameter's value, otherwise the iDRAC IPv4 gateway is set to the to the Gateway attribute in the IPv4 Information group in the iDRAC Card Profile. After the successful auto-discovery initiation, if the DNS parameter has non-NULL value, then the iDRAC IPv4 DNS address is set to that parameter's value, otherwise the iDRAC IPv4 DNS address is set to the to the DNS1 attribute in the IPv4 Information group in the iDRAC Card Profile. After the successful auto-discovery initiation, if the Domain parameter has non-NULL value, then the iDRAC domain name is set to that parameter's value, otherwise the iDRAC domain name is set to the to the DNSDomainName attribute in the NIC Information group in the iDRAC Card Profile.",
            "longDescription": "The ReInitiateAutoDiscovery() method is used for reinitiating the discovery and handshake with static IP configuration. If the method successfully executes, iDRAC is in the static IP mode after the auto-discovery is initiated and thus, does not require DHCP setup. The static IP information for auto-discovery can be set either through the optional input parameters of this method or through the iDRAC attributes in the iDRAC Card Profile. After the successful auto-discovery initiation, if the IPAddress parameter has non-NULL value, the iDRAC IPv4 address is set to that parameter's value, otherwise the iDRAC IPv4 Address is set to the Address attribute in the IPv4 Information group in the iDRAC Card Profile. After the successful auto-discovery initiation, if the Mask parameter has a non-NULL value, the iDRAC IPv4 address net mask is set to that parameter's value, otherwise the iDRAC IPv4 address net mask is set to the to the Netmask attribute in the IPv4 Information group in the iDRAC Card Profile. After the successful auto-discovery initiation, if the Gateway parameter has non-NULL value, then the iDRAC IPv4 gateway address is set to that parameter's value, otherwise the iDRAC IPv4 gateway is set to the to the Gateway attribute in the IPv4 Information group in the iDRAC Card Profile. After the successful auto-discovery initiation, if the DNS parameter has non-NULL value, then the iDRAC IPv4 DNS address is set to that parameter's value, otherwise the iDRAC IPv4 DNS address is set to the to the DNS1 attribute in the IPv4 Information group in the iDRAC Card Profile. After the successful auto-discovery initiation, if the Domain parameter has non-NULL value, then the iDRAC domain name is set to that parameter's value, otherwise the iDRAC domain name is set to the to the DNSDomainName attribute in the NIC Information group in the iDRAC Card Profile.",
            "parameters": {
                "DNS": {
                    "description": "Specifies the DNS IP address. If not specified, iDRAC static DNS IP address setting is used.",
                    "longDescription": "Specifies the DNS IP address. If not specified, iDRAC static DNS IP address setting is used.",
                    "type": "string"
                },
                "Domain": {
                    "description": "Specifies the domain name. If not specified, iDRAC static domain name setting is used.",
                    "longDescription": "Specifies the domain name. If not specified, iDRAC static domain name setting is used.",
                    "type": "string"
                },
                "Gateway": {
                    "description": "Specifies the gateway IP address. If not specified, iDRAC static gateway setting is used.",
                    "longDescription": "Specifies the gateway IP address. If not specified, iDRAC static gateway setting is used.",
                    "type": "string"
                },
                "IPAddress": {
                    "description": "Specifies the static IP address. If not specified, iDRAC static IP address setting is used.",
                    "longDescription": "Specifies the static IP address. If not specified, iDRAC static IP address setting is used.",
                    "type": "string"
                },
                "Mask": {
                    "description": "Specifies the subnet mask. If not specified, iDRAC static mask setting is used.",
                    "longDescription": "Specifies the subnet mask. If not specified, iDRAC static mask setting is used.",
                    "type": "string"
                },
                "PerformAutoDiscovery": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/PerformAutoDiscovery",
                    "description": "Specifies the auto discovery mode. \"Off\": Disables auto discovery, \"Now\": Enables and initiates auto discovery immediately, \"NextBoot\": Delays reconfiguration and discovery till next power cycle.",
                    "longDescription": "Specifies the auto discovery mode. \"Off\": Disables auto discovery, \"Now\": Enables and initiates auto discovery immediately, \"NextBoot\": Delays reconfiguration and discovery till next power cycle."
                },
                "ProvisioningServer": {
                    "description": "This property specifies the provisioning server addresses and ports used for auto discovery. If omitted, Lifecycle Controller gets the value from DHCP or DNS.",
                    "longDescription": "This property specifies the provisioning server addresses and ports used for auto discovery. If omitted, Lifecycle Controller gets the value from DHCP or DNS.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "ReInitiateDHS": {
            "additionalProperties": false,
            "description": "The ReInitiateDHS() method is used for reinitiating the provisioning server discovery and handshake.",
            "longDescription": "The ReInitiateDHS() method is used for reinitiating the provisioning server discovery and handshake.",
            "parameters": {
                "PerformAutoDiscovery": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/PerformAutoDiscovery",
                    "description": "A value of \"Off = 1\" disables auto discovery. A value of \"Now = 2\" enables and initiates auto discovery immediately. A value of  \"NextBoot = 3\" delays reconfiguration and auto discovery until next AC power cycle. Note: If NextBoot has a value of 3, then upon successful execution, the Discovery Factory Defaults attribute is set to \"On\".",
                    "longDescription": "A value of \"Off = 1\" disables auto discovery. A value of \"Now = 2\" enables and initiates auto discovery immediately. A value of  \"NextBoot = 3\" delays reconfiguration and auto discovery until next AC power cycle. Note: If NextBoot has a value of 3, then upon successful execution, the Discovery Factory Defaults attribute is set to \"On\"."
                },
                "ProvisioningServer": {
                    "description": "This property specifies the provisioning server addresses and ports used for auto discovery. If omitted, Lifecycle Controller gets the value from DHCP or DNS.",
                    "longDescription": "This property specifies the provisioning server addresses and ports used for auto discovery. If omitted, Lifecycle Controller gets the value from DHCP or DNS.",
                    "type": "string"
                },
                "ResetToFactoryDefaults": {
                    "description": "If ResetToFactoryDefaults is True, all configuration information is replaced with auto-discovery factory defaults. If False, an error is returned.",
                    "longDescription": "If ResetToFactoryDefaults is True, all configuration information is replaced with auto-discovery factory defaults. If False, an error is returned.",
                    "type": "boolean"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RunePSADiagnostics": {
            "additionalProperties": false,
            "description": "The method is used for running the diagnostics based on the runmode switch and save the report in the Maser partition (MAS002). The diagnostics can be run in either Express or Extended mode or as a long run that encompasses all tests.",
            "longDescription": "The method is used for running the diagnostics based on the runmode switch and save the report in the Maser partition (MAS002). The diagnostics can be run in either Express or Extended mode or as a long run that encompasses all tests.",
            "parameters": {
                "RebootJobType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/RebootJobType",
                    "description": "The value contains the requested reboot type.",
                    "longDescription": "The value contains the requested reboot type."
                },
                "RunMode": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/RunMode",
                    "description": "RunMode to run the diagnostics.",
                    "longDescription": "RunMode to run the diagnostics."
                },
                "ScheduledStartTime": {
                    "description": "Schedules the job at the time specified. The format is yyyymmddhhmmss. Default value is TIME_NOW, which will start the job immediately.",
                    "longDescription": "Schedules the job at the time specified. The format is yyyymmddhhmmss. Default value is TIME_NOW, which will start the job immediately.",
                    "type": "string"
                },
                "UntilTime": {
                    "description": "Scheduled end time for job execution in datetime format:yyyymmddhhmmss. If not specified, there is no end time.",
                    "longDescription": "Scheduled end time for job execution in datetime format:yyyymmddhhmmss. If not specified, there is no end time.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "SupportAssistAcceptEULA": {
            "additionalProperties": false,
            "description": "This method is used for accepting the EULA terms and conditions required for SupportAssist registration.",
            "longDescription": "This method is used for accepting the EULA terms and conditions required for SupportAssist registration.",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "SupportAssistClearAutoCollectSchedule": {
            "additionalProperties": false,
            "description": "This method is used for clearing all the periodic collections settings for SupportAssist.",
            "longDescription": "This method is used for clearing all the periodic collections settings for SupportAssist.",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "SupportAssistCollection": {
            "additionalProperties": false,
            "description": "This method is used for triggering a SupportAssist collection and, optionally, send the collection to Dell or a network share.",
            "longDescription": "This method is used for triggering a SupportAssist collection and, optionally, send the collection to Dell or a network share.",
            "parameters": {
                "DataSelectorArrayIn": {
                    "description": "This property allows to select the different type of logs in the collection. Default value for this parameter is HW Data and MUT logs are part of every collection.",
                    "items": {
                        "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/DataSelectorArrayIn"
                    },
                    "longDescription": "This property allows to select the different type of logs in the collection. Default value for this parameter is HW Data and MUT logs are part of every collection.",
                    "type": "array"
                },
                "Filter": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/Filter",
                    "description": "This property specifies whether the collection should be filtered for PII (Personal Identification Information). Filter = 1 indicates that the collection is filtered for PII and excludes all debug logs and storage logs. When this parameter is not passed, default value is 0 (No filtering).",
                    "longDescription": "This property specifies whether the collection should be filtered for PII (Personal Identification Information). Filter = 1 indicates that the collection is filtered for PII and excludes all debug logs and storage logs. When this parameter is not passed, default value is 0 (No filtering)."
                },
                "IPAddress": {
                    "description": "The IP address of network share. This parameter is mandatory when ShareType is NFS or CIFS.",
                    "longDescription": "The IP address of network share. This parameter is mandatory when ShareType is NFS or CIFS.",
                    "type": "string"
                },
                "IgnoreCertWarning": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/IgnoreCertWarning",
                    "description": "Specifies if certificate warning should be ignored when HTTPS is specified. If IgnoreCertWarning is On, warnings are ignored. Default is 2 (On).",
                    "longDescription": "Specifies if certificate warning should be ignored when HTTPS is specified. If IgnoreCertWarning is On, warnings are ignored. Default is 2 (On)."
                },
                "Password": {
                    "description": "Password of the account to access the share. This parameter is mandatory if ShareType is CIFS.",
                    "longDescription": "Password of the account to access the share. This parameter is mandatory if ShareType is CIFS.",
                    "type": "string"
                },
                "Port": {
                    "description": "Port for FTP server. Default is set to 21.",
                    "longDescription": "Port for FTP server. Default is set to 21.",
                    "type": "integer"
                },
                "ProxyPasswd": {
                    "description": "The password to login into proxy server.",
                    "longDescription": "The password to login into proxy server.",
                    "type": "string"
                },
                "ProxyPort": {
                    "description": "Port for the proxy server. Default is set to 80.",
                    "longDescription": "Port for the proxy server. Default is set to 80.",
                    "type": "string"
                },
                "ProxyServer": {
                    "description": "The IP address of the proxy server.",
                    "longDescription": "The IP address of the proxy server.",
                    "type": "string"
                },
                "ProxySupport": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ProxySupport",
                    "description": "Specifies if proxy should be used. Default is 1 (Off).",
                    "longDescription": "Specifies if proxy should be used. Default is 1 (Off)."
                },
                "ProxyType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ProxyType",
                    "description": "The proxy type of the proxy server. Default is 0 (HTTP).",
                    "longDescription": "The proxy type of the proxy server. Default is 0 (HTTP)."
                },
                "ProxyUname": {
                    "description": "The user name for the proxy server.",
                    "longDescription": "The user name for the proxy server.",
                    "type": "string"
                },
                "ShareName": {
                    "description": "Name of the CIFS share or full path to the NFS share. Optional for HTTP/HTTPS share (if supported), this may be treated as the path of the directory containing the file.",
                    "longDescription": "Name of the CIFS share or full path to the NFS share. Optional for HTTP/HTTPS share (if supported), this may be treated as the path of the directory containing the file.",
                    "type": "string"
                },
                "ShareType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ShareType",
                    "description": "Type of the network share. Default value is based on iDRAC.Embedded.1#SupportAssist.1#DefaultProtocol attribute, when this parameter is not passed.",
                    "longDescription": "Type of the network share. Default value is based on iDRAC.Embedded.1#SupportAssist.1#DefaultProtocol attribute, when this parameter is not passed."
                },
                "Transmit": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/Transmit",
                    "description": "This property specifies if collection should be transmitted to Dell. Default value is 0 (No).",
                    "longDescription": "This property specifies if collection should be transmitted to Dell. Default value is 0 (No)."
                },
                "UserName": {
                    "description": "UserName used to access the share. This parameter is mandatory when ShareType is CIFS.",
                    "longDescription": "UserName used to access the share. This parameter is mandatory when ShareType is CIFS.",
                    "type": "string"
                },
                "Workgroup": {
                    "description": "Workgroup for the CIFS share - optional.",
                    "longDescription": "Workgroup for the CIFS share - optional.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "SupportAssistExportLastCollection": {
            "additionalProperties": false,
            "description": "This method is used for exporting the last SupportAssist collection (stored in iDRAC) to a network share. If no parameters are passed, the default share parameters of iDRAC are used. The default share parameters may be stored by setting the appropriate attributes in iDRAC.",
            "longDescription": "This method is used for exporting the last SupportAssist collection (stored in iDRAC) to a network share. If no parameters are passed, the default share parameters of iDRAC are used. The default share parameters may be stored by setting the appropriate attributes in iDRAC.",
            "parameters": {
                "IPAddress": {
                    "description": "The IP address of network share. This parameter is mandatory when ShareType is NFS or CIFS.",
                    "longDescription": "The IP address of network share. This parameter is mandatory when ShareType is NFS or CIFS.",
                    "type": "string"
                },
                "IgnoreCertWarning": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/IgnoreCertWarning",
                    "description": "Specifies if certificate warning should be ignored when HTTPS is specified. If IgnoreCertWarning is On, warnings are ignored. Default is 2 (On).",
                    "longDescription": "Specifies if certificate warning should be ignored when HTTPS is specified. If IgnoreCertWarning is On, warnings are ignored. Default is 2 (On)."
                },
                "Password": {
                    "description": "Password of the account to access the share. This parameter is mandatory of ShareType is CIFS.",
                    "longDescription": "Password of the account to access the share. This parameter is mandatory of ShareType is CIFS.",
                    "type": "string"
                },
                "Port": {
                    "description": "Port for FTP server. Default is set to 21.",
                    "longDescription": "Port for FTP server. Default is set to 21.",
                    "type": "integer"
                },
                "ProxyPasswd": {
                    "description": "The password to login into proxy server.",
                    "longDescription": "The password to login into proxy server.",
                    "type": "string"
                },
                "ProxyPort": {
                    "description": "Port for the proxy server. Default is set to 80.",
                    "longDescription": "Port for the proxy server. Default is set to 80.",
                    "type": "string"
                },
                "ProxyServer": {
                    "description": "The IP address of the proxy server.",
                    "longDescription": "The IP address of the proxy server.",
                    "type": "string"
                },
                "ProxySupport": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ProxySupport",
                    "description": "Specifies if proxy should be used. Default is 1 (Off).",
                    "longDescription": "Specifies if proxy should be used. Default is 1 (Off)."
                },
                "ProxyType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ProxyType",
                    "description": "The proxy type of the proxy server. Default is 0 (HTTP).",
                    "longDescription": "The proxy type of the proxy server. Default is 0 (HTTP)."
                },
                "ProxyUname": {
                    "description": "The user name for the proxy server.",
                    "longDescription": "The user name for the proxy server.",
                    "type": "string"
                },
                "ShareName": {
                    "description": "Name of the CIFS share or full path to the NFS share. This parameter is mandatory when ShareType is passed.",
                    "longDescription": "Name of the CIFS share or full path to the NFS share. This parameter is mandatory when ShareType is passed.",
                    "type": "string"
                },
                "ShareType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ShareType",
                    "description": "Type of the network share.",
                    "longDescription": "Type of the network share."
                },
                "UserName": {
                    "description": "UserName used to access the share. This parameter is mandatory when ShareType is CIFS.",
                    "longDescription": "UserName used to access the share. This parameter is mandatory when ShareType is CIFS.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "SupportAssistGetAutoCollectSchedule": {
            "actionResponse": {
                "$ref": "#/definitions/SupportAssistGetAutoCollectScheduleResponse"
            },
            "additionalProperties": false,
            "description": "This method is used to retrieve the periodic collections schedule for SupportAssist.",
            "longDescription": "This method is used to retrieve the periodic collections schedule for SupportAssist.",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "SupportAssistGetAutoCollectScheduleResponse": {
            "additionalProperties": false,
            "description": "The response body for the SupportAssistGetAutoCollectSchedule action.",
            "longDescription": "This type shall contain the properties found in the response body for the SupportAssistGetAutoCollectSchedule action.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "DayOfMonth": {
                    "description": "1-28 : Day of Month, L: Last day of the month 28,29,30 or 31 depending on the month,*: This means any value and this is the default value.",
                    "longDescription": "1-28 : Day of Month, L: Last day of the month 28,29,30 or 31 depending on the month,*: This means any value and this is the default value.",
                    "readonly": true,
                    "type": "string",
                    "versionAdded": "v1_1_0"
                },
                "DayOfWeek": {
                    "description": "Valid values : single day of week. Mapping for day of week: Mon = 1, Tue = 2, Wed = 3, Thu = 4, Fri = 5, Sat = 6, Sun = 0 or 7(The default is first Sunday of the current month and if that is already past while applying then first Sunday of next month is the first time the job is scheduled). Default value is *, which indicates any value.",
                    "longDescription": "Valid values : single day of week. Mapping for day of week: Mon = 1, Tue = 2, Wed = 3, Thu = 4, Fri = 5, Sat = 6, Sun = 0 or 7(The default is first Sunday of the current month and if that is already past while applying then first Sunday of next month is the first time the job is scheduled). Default value is *, which indicates any value.",
                    "readonly": true,
                    "type": "string",
                    "versionAdded": "v1_1_0"
                },
                "Recurrence": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/SupportAssistGetAutoCollectScheduleResponseRecurrence",
                    "description": "This represents periodicity of collections.",
                    "longDescription": "This represents periodicity of collections.",
                    "readonly": true,
                    "versionAdded": "v1_1_0"
                },
                "Repeat": {
                    "description": "Valid values are \"N\", \"1\" and \"3\". The default is \"1\" for weekly and Monthly. It must be set to \"3\" for quarterly collection",
                    "longDescription": "Valid values are \"N\", \"1\" and \"3\". The default is \"1\" for weekly and Monthly. It must be set to \"3\" for quarterly collection",
                    "readonly": true,
                    "type": "integer",
                    "versionAdded": "v1_1_0"
                },
                "Time": {
                    "description": "Hh:mm AM/ PM (hour and minute of day to run).",
                    "longDescription": "Hh:mm AM/ PM (hour and minute of day to run).",
                    "readonly": true,
                    "type": "string",
                    "versionAdded": "v1_1_0"
                },
                "WeekOfMonth": {
                    "description": "*: Means any value and this is the default value. Only one of the characters above. Default * (The default is first week of the month and if that is already past while applying then first week of next month is the first time the job is scheduled) . 1 4 : Week Number, L : Means the last week of the month, A non * value is mutually exclusive with \"DayOfMonth\". If this value is non * then DayOfWeek is required.",
                    "longDescription": "*: Means any value and this is the default value. Only one of the characters above. Default * (The default is first week of the month and if that is already past while applying then first week of next month is the first time the job is scheduled) . 1 4 : Week Number, L : Means the last week of the month, A non * value is mutually exclusive with \"DayOfMonth\". If this value is non * then DayOfWeek is required.",
                    "readonly": true,
                    "type": "string",
                    "versionAdded": "v1_1_0"
                }
            },
            "required": [
                "DayOfMonth",
                "DayOfWeek",
                "Recurrence",
                "Repeat",
                "Time",
                "WeekOfMonth"
            ],
            "type": "object"
        },
        "SupportAssistGetEULAStatus": {
            "actionResponse": {
                "$ref": "#/definitions/SupportAssistGetEULAStatusResponse"
            },
            "additionalProperties": false,
            "description": "This method is used for getting the acceptance status of the EULA terms and conditions required for SupportAssist registration.",
            "longDescription": "This method is used for getting the acceptance status of the EULA terms and conditions required for SupportAssist registration.",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "SupportAssistGetEULAStatusResponse": {
            "additionalProperties": false,
            "description": "The response body for the SupportAssistGetEULAStatus action.",
            "longDescription": "This type shall contain the properties found in the response body for the SupportAssistGetEULAStatus action.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "Interface": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/SupportAssistGetEULAStatusResponseInterface",
                    "description": "Interface used to accept EULA.",
                    "longDescription": "Interface used to accept EULA.",
                    "readonly": true,
                    "versionAdded": "v1_1_0"
                },
                "IsRegistered": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/SupportAssistGetEULAStatusResponseIsRegistered",
                    "description": "This parameter indicates if iDRAC is registered for SupportAssist.",
                    "longDescription": "This parameter indicates if iDRAC is registered for SupportAssist.",
                    "readonly": true,
                    "versionAdded": "v1_1_0"
                },
                "Time": {
                    "description": "Date and Time when EULA was accepted, in CIM Standard format.",
                    "longDescription": "Date and Time when EULA was accepted, in CIM Standard format.",
                    "readonly": true,
                    "type": "string",
                    "versionAdded": "v1_1_0"
                },
                "User": {
                    "description": "The iDRAC user who accepted the EULA.",
                    "longDescription": "The iDRAC user who accepted the EULA.",
                    "readonly": true,
                    "type": "string",
                    "versionAdded": "v1_1_0"
                }
            },
            "required": [
                "Interface",
                "IsRegistered",
                "Time",
                "User"
            ],
            "type": "object"
        },
        "SupportAssistRegister": {
            "additionalProperties": false,
            "description": "This method is used registering for SupportAssist features.",
            "longDescription": "This method is used registering for SupportAssist features.",
            "parameters": {
                "City": {
                    "description": "Contains city name.",
                    "longDescription": "Contains city name.",
                    "type": "string"
                },
                "CompanyName": {
                    "description": "Contains company name.",
                    "longDescription": "Contains company name.",
                    "type": "string"
                },
                "Country": {
                    "description": "Contains Country address.",
                    "longDescription": "Contains Country address.",
                    "type": "string"
                },
                "PrimaryAlternateNumber": {
                    "description": "Contains primary alternate number.",
                    "longDescription": "Contains primary alternate number.",
                    "type": "string"
                },
                "PrimaryEmail": {
                    "description": "Contains primary email address.",
                    "longDescription": "Contains primary email address.",
                    "type": "string"
                },
                "PrimaryFirstName": {
                    "description": "Contains primary first name.",
                    "longDescription": "Contains primary first name.",
                    "type": "string"
                },
                "PrimaryLastName": {
                    "description": "Contains primary last name.",
                    "longDescription": "Contains primary last name.",
                    "type": "string"
                },
                "PrimaryPhoneNumber": {
                    "description": "Contains primary phone number.",
                    "longDescription": "Contains primary phone number.",
                    "type": "string"
                },
                "ProxyHostName": {
                    "description": "Contains proxy hostname.",
                    "longDescription": "Contains proxy hostname.",
                    "type": "string"
                },
                "ProxyPassword": {
                    "description": "Contains proxy password.",
                    "longDescription": "Contains proxy password.",
                    "type": "string"
                },
                "ProxyPort": {
                    "description": "Contains proxy port.",
                    "longDescription": "Contains proxy port.",
                    "type": "integer"
                },
                "ProxyUserName": {
                    "description": "Contains proxy username.",
                    "longDescription": "Contains proxy username.",
                    "type": "string"
                },
                "SecondaryAlternateNumber": {
                    "description": "Contains secondary alternate phone number.",
                    "longDescription": "Contains secondary alternate phone number.",
                    "type": "string"
                },
                "SecondaryEmail": {
                    "description": "Contains secondary email address.",
                    "longDescription": "Contains secondary email address.",
                    "type": "string"
                },
                "SecondaryFirstName": {
                    "description": "Contains secondary first name.",
                    "longDescription": "Contains secondary first name.",
                    "type": "string"
                },
                "SecondaryLastName": {
                    "description": "Contains secondary last name.",
                    "longDescription": "Contains secondary last name.",
                    "type": "string"
                },
                "SecondaryPhoneNumber": {
                    "description": "Contains secondary phone number.",
                    "longDescription": "Contains secondary phone number.",
                    "type": "string"
                },
                "State": {
                    "description": "Contains State address.",
                    "longDescription": "Contains State address.",
                    "type": "string"
                },
                "Street1": {
                    "description": "Contains Street Address.",
                    "longDescription": "Contains Street Address.",
                    "type": "string"
                },
                "Street2": {
                    "description": "Contains Street2 address.",
                    "longDescription": "Contains Street2 address.",
                    "type": "string"
                },
                "Zip": {
                    "description": "Contains Zip code.",
                    "longDescription": "Contains Zip code.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "SupportAssistSetAutoCollectSchedule": {
            "additionalProperties": false,
            "description": "This method is used for auto-scheduling the collection of logs.",
            "longDescription": "This method is used for auto-scheduling the collection of logs.",
            "parameters": {
                "DayOfMonth": {
                    "description": "1-28 : Day of Month, L: Last day of the month 28,29,30 or 31 depending on the month. Default value is *, which indicates any value.",
                    "longDescription": "1-28 : Day of Month, L: Last day of the month 28,29,30 or 31 depending on the month. Default value is *, which indicates any value.",
                    "type": "string"
                },
                "DayOfWeek": {
                    "description": "Valid values : single day of week. Mapping for day of week: Mon = 1, Tue = 2, Wed = 3, Thu = 4, Fri = 5, Sat = 6, Sun = 0 or 7(The default is first Sunday of the current month and if that is already past while applying then first Sunday of next month is the first time the job is scheduled). Default value is *, which indicates any value.",
                    "longDescription": "Valid values : single day of week. Mapping for day of week: Mon = 1, Tue = 2, Wed = 3, Thu = 4, Fri = 5, Sat = 6, Sun = 0 or 7(The default is first Sunday of the current month and if that is already past while applying then first Sunday of next month is the first time the job is scheduled). Default value is *, which indicates any value.",
                    "type": "string"
                },
                "Recurrence": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/Recurrence",
                    "description": "Specifies the collection recurrence. If recurrence is Monthly or Quarterly, then either 1. DayofMonth or 2. WeekOfMonth and DayOfWeek must be passed.",
                    "longDescription": "Specifies the collection recurrence. If recurrence is Monthly or Quarterly, then either 1. DayofMonth or 2. WeekOfMonth and DayOfWeek must be passed."
                },
                "Time": {
                    "description": "Hh:mm AM/PM (hour and minute of day to run).",
                    "longDescription": "Hh:mm AM/PM (hour and minute of day to run).",
                    "type": "string"
                },
                "WeekOfMonth": {
                    "description": "*: Means any value and this is the default value. Only one of the characters above. Default * (The default is first week of the month and if that is already past while applying then first week of next month is the first time the job is scheduled). 1 4 : Week Number, L : Means the last week of the month, A non * value is mutually exclusive with \"DayOfMonth\". If this value is non * then DayOfWeek is required.",
                    "longDescription": "*: Means any value and this is the default value. Only one of the characters above. Default * (The default is first week of the month and if that is already past while applying then first week of next month is the first time the job is scheduled). 1 4 : Week Number, L : Means the last week of the month, A non * value is mutually exclusive with \"DayOfMonth\". If this value is non * then DayOfWeek is required.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "SupportAssistUploadLastCollection": {
            "additionalProperties": false,
            "description": "This method is used for exporting the last SupportAssist collection to Dell.",
            "longDescription": "This method is used for exporting the last SupportAssist collection to Dell.",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "SystemErase": {
            "additionalProperties": false,
            "description": "This method is to create granular and user selectable categories to increase flexibility and improve the repurposing aspect of the existing System Wipe feature. This method takes the component name as input. Multiple options can also be provided. Upon successful creation of job , a job ID is returned.",
            "longDescription": "This method is to create granular and user selectable categories to increase flexibility and improve the repurposing aspect of the existing System Wipe feature. This method takes the component name as input. Multiple options can also be provided. Upon successful creation of job , a job ID is returned.",
            "parameters": {
                "Component": {
                    "description": "Array to select the components to be erased. The System Components are: BIOS , DIAG, AllApps, DrvPack, LCData, IDRAC. The Storage Components are: PERCNVCache, vFlash, CryptographicErasePD, OverwritePD, NonVolatileMemory. The parameters Component and ComponentBitmap are mutually exclusive. ( Note: SecureErasePD has been renamed to CryptographicErasePD, however, for backwards compatibility SecureErasePD will still work)",
                    "items": {
                        "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/Component"
                    },
                    "longDescription": "Array to select the components to be erased. The System Components are: BIOS , DIAG, AllApps, DrvPack, LCData, IDRAC. The Storage Components are: PERCNVCache, vFlash, CryptographicErasePD, OverwritePD, NonVolatileMemory. The parameters Component and ComponentBitmap are mutually exclusive. ( Note: SecureErasePD has been renamed to CryptographicErasePD, however, for backwards compatibility SecureErasePD will still work)",
                    "type": "array"
                },
                "ComponentBitmap": {
                    "description": "A composite Bitmap that may be used to select the components to erase. The parameters ComponentBitmap and Component shall be Mutually Exclusive. The following are the masks for the individual components which may be OR-ed together to specify multiple components. The lowest Byte will have 8 bits reserved for the System components. The second lowest byte will have 8 bits reserved for the Storage components. The various component masks in the format (decimal-hexadecimal-component) are as follows. System Component masks: 1-0x1-BIOS, 2-0x2-DIAG, 4-0x4-DrvPack, 8-0x8-LCData, 16-0x10-iDRAC, 128-0x80-AllApps. Storage Component Masks: 256-0x100-PERCNVCache, 512-0x200-vFlash, 1024-0x400-CryptographicErasePD, 2048-0x800-OverwritePD, 4096-0x1000-NonVolatileMemory",
                    "longDescription": "A composite Bitmap that may be used to select the components to erase. The parameters ComponentBitmap and Component shall be Mutually Exclusive. The following are the masks for the individual components which may be OR-ed together to specify multiple components. The lowest Byte will have 8 bits reserved for the System components. The second lowest byte will have 8 bits reserved for the Storage components. The various component masks in the format (decimal-hexadecimal-component) are as follows. System Component masks: 1-0x1-BIOS, 2-0x2-DIAG, 4-0x4-DrvPack, 8-0x8-LCData, 16-0x10-iDRAC, 128-0x80-AllApps. Storage Component Masks: 256-0x100-PERCNVCache, 512-0x200-vFlash, 1024-0x400-CryptographicErasePD, 2048-0x800-OverwritePD, 4096-0x1000-NonVolatileMemory",
                    "type": "integer"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "TestNetworkShare": {
            "additionalProperties": false,
            "description": "The TestNetworkShare() method is used for testing the network connection for Lifecycle Controller.",
            "longDescription": "The TestNetworkShare() method is used for testing the network connection for Lifecycle Controller.",
            "parameters": {
                "IPAddress": {
                    "description": "IP address of the NFS or CIFS share such as 192.168.10.12. The parameter is required if the ShareType parameter has value 0 (NFS), 2 (CIFS), 3-TFTP,5-HTTP, 6- HTTPS, or is not specified. For FTP, the default value is ftp.dell.com.",
                    "longDescription": "IP address of the NFS or CIFS share such as 192.168.10.12. The parameter is required if the ShareType parameter has value 0 (NFS), 2 (CIFS), 3-TFTP,5-HTTP, 6- HTTPS, or is not specified. For FTP, the default value is ftp.dell.com.",
                    "type": "string"
                },
                "IgnoreCertWarning": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/IgnoreCertWarning",
                    "description": "Specifies if certificate warning should be ignored when HTTPS is specified. If IgnoreCertWarning is On, warnings are ignored. Default is 2 (On).",
                    "longDescription": "Specifies if certificate warning should be ignored when HTTPS is specified. If IgnoreCertWarning is On, warnings are ignored. Default is 2 (On)."
                },
                "Password": {
                    "description": "Password to access Network Share.",
                    "longDescription": "Password to access Network Share.",
                    "type": "string"
                },
                "ProxyPasswd": {
                    "description": "The password for the proxy server.",
                    "longDescription": "The password for the proxy server.",
                    "type": "string"
                },
                "ProxyPort": {
                    "description": "Port for the proxy server. Default is set to 80.",
                    "longDescription": "Port for the proxy server. Default is set to 80.",
                    "type": "string"
                },
                "ProxyServer": {
                    "description": "The IP address of the proxy server.",
                    "longDescription": "The IP address of the proxy server.",
                    "type": "string"
                },
                "ProxySupport": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ProxySupport",
                    "description": "Specifies if proxy should be used. Default is 1 (Off).",
                    "longDescription": "Specifies if proxy should be used. Default is 1 (Off)."
                },
                "ProxyType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ProxyType",
                    "description": "The proxy type of the proxy server. Default is 0 (HTTP).",
                    "longDescription": "The proxy type of the proxy server. Default is 0 (HTTP)."
                },
                "ProxyUname": {
                    "description": "The user name for the proxy server.",
                    "longDescription": "The user name for the proxy server.",
                    "type": "string"
                },
                "ShareName": {
                    "description": "Name of the CIFS share or full path to the NFS share. Optional for HTTP/HTTPS share (if supported), this may be treated as the path of the directory containing the file.",
                    "longDescription": "Name of the CIFS share or full path to the NFS share. Optional for HTTP/HTTPS share (if supported), this may be treated as the path of the directory containing the file.",
                    "type": "string"
                },
                "ShareType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/ShareType",
                    "description": "Type of the network share. Default is NFS, when this parameter is not passed.",
                    "longDescription": "Type of the network share. Default is NFS, when this parameter is not passed."
                },
                "UserName": {
                    "description": "UserName for Network share authentication.",
                    "longDescription": "UserName for Network share authentication.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "UpdateOSAppHealthData": {
            "additionalProperties": false,
            "description": "This method is used for getting the latest OSAppHealth data based on the input parameter UpdateType.",
            "longDescription": "This method is used for getting the latest OSAppHealth data based on the input parameter UpdateType.",
            "parameters": {
                "UpdateType": {
                    "$ref": "/redfish/v1/Schemas/DellLCService.json#/definitions/UpdateType",
                    "description": "UpdateType parameter is used for selecting the OSAppHealthData update type.",
                    "longDescription": "UpdateType parameter is used for selecting the OSAppHealthData update type."
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        }
    },
    "owningEntity": "Dell",
    "title": "#DellLCService.v1_3_0.DellLCService"
}