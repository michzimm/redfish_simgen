{
    "$id": "/redfish/v1/Schemas/DelliDRACCardService.v1_4_0.json",
    "$ref": "#/definitions/DelliDRACCardService",
    "$schema": "/redfish/v1/Schemas/redfish-schema-v1.json",
    "copyright": "Copyright 2014-2020 Dell, Inc. or its subsidiaries. All Rights Reserved.",
    "definitions": {
        "Actions": {
            "additionalProperties": false,
            "description": "The available actions for this resource.",
            "longDescription": "This type shall contain the available actions for this resource.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "#DelliDRACCardService.DeleteCertificate": {
                    "$ref": "#/definitions/DeleteCertificate"
                },
                "#DelliDRACCardService.DeleteGroup": {
                    "$ref": "#/definitions/DeleteGroup"
                },
                "#DelliDRACCardService.DisableSEKM": {
                    "$ref": "#/definitions/DisableSEKM"
                },
                "#DelliDRACCardService.DisableiLKM": {
                    "$ref": "#/definitions/DisableiLKM"
                },
                "#DelliDRACCardService.EnableSEKM": {
                    "$ref": "#/definitions/EnableSEKM"
                },
                "#DelliDRACCardService.EnableiLKM": {
                    "$ref": "#/definitions/EnableiLKM"
                },
                "#DelliDRACCardService.ExportCertificate": {
                    "$ref": "#/definitions/ExportCertificate"
                },
                "#DelliDRACCardService.ExportSSLCertificate": {
                    "$ref": "#/definitions/ExportSSLCertificate"
                },
                "#DelliDRACCardService.FactoryIdentityCertificateGenerateCSR": {
                    "$ref": "#/definitions/FactoryIdentityCertificateGenerateCSR"
                },
                "#DelliDRACCardService.FactoryIdentityExportCertificate": {
                    "$ref": "#/definitions/FactoryIdentityExportCertificate"
                },
                "#DelliDRACCardService.FactoryIdentityImportCertificate": {
                    "$ref": "#/definitions/FactoryIdentityImportCertificate"
                },
                "#DelliDRACCardService.GenerateSEKMCSR": {
                    "$ref": "#/definitions/GenerateSEKMCSR"
                },
                "#DelliDRACCardService.GetKVMSession": {
                    "$ref": "#/definitions/GetKVMSession"
                },
                "#DelliDRACCardService.ImportCertificate": {
                    "$ref": "#/definitions/ImportCertificate"
                },
                "#DelliDRACCardService.ImportSSLCertificate": {
                    "$ref": "#/definitions/ImportSSLCertificate"
                },
                "#DelliDRACCardService.JoinGroup": {
                    "$ref": "#/definitions/JoinGroup"
                },
                "#DelliDRACCardService.Rekey": {
                    "$ref": "#/definitions/Rekey"
                },
                "#DelliDRACCardService.RemoveSelf": {
                    "$ref": "#/definitions/RemoveSelf"
                },
                "#DelliDRACCardService.SSLResetCfg": {
                    "$ref": "#/definitions/SSLResetCfg"
                },
                "#DelliDRACCardService.SendTestEmailAlert": {
                    "$ref": "#/definitions/SendTestEmailAlert"
                },
                "#DelliDRACCardService.SendTestSNMPTrap": {
                    "$ref": "#/definitions/SendTestSNMPTrap"
                },
                "#DelliDRACCardService.TestRsyslogServerConnection": {
                    "$ref": "#/definitions/TestRsyslogServerConnection"
                },
                "#DelliDRACCardService.TestSEKMServerConnection": {
                    "$ref": "#/definitions/TestSEKMServerConnection"
                },
                "#DelliDRACCardService.VerifyHWProofOfPossession": {
                    "$ref": "#/definitions/VerifyHWProofOfPossession"
                },
                "#DelliDRACCardService.iDRACReset": {
                    "$ref": "#/definitions/iDRACReset"
                },
                "#DelliDRACCardService.iDRACResetCfg": {
                    "$ref": "#/definitions/iDRACResetCfg"
                },
                "#DelliDRACCardService.iLKMToSEKMTransition": {
                    "$ref": "#/definitions/iLKMToSEKMTransition"
                }
            },
            "type": "object"
        },
        "DeleteCertificate": {
            "additionalProperties": false,
            "description": "This method is used to delete the certificate from iDRAC, on the basis of input parameter Type.",
            "longDescription": "This method is used to delete the certificate from iDRAC, on the basis of input parameter Type.",
            "parameters": {
                "CertificateType": {
                    "$ref": "/redfish/v1/Schemas/DelliDRACCardService.json#/definitions/CertificateType",
                    "description": "The type of the certificate to be deleted.",
                    "longDescription": "The type of the certificate to be deleted."
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DeleteGroup": {
            "additionalProperties": false,
            "description": "The method is used delete the group.",
            "longDescription": "The method is used delete the group.",
            "parameters": {
                "GroupName": {
                    "description": "Name of group to be delete.",
                    "longDescription": "Name of group to be delete.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "DelliDRACCardService": {
            "additionalProperties": false,
            "description": "The DelliDRACCardService resource provides some actions to support iDRAC configurations.",
            "longDescription": "The DelliDRACCardService resource provides some actions to support iDRAC configurations.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "@odata.context": {
                    "$ref": "/redfish/v1/Schemas/odata-v4.json#/definitions/context"
                },
                "@odata.etag": {
                    "$ref": "/redfish/v1/Schemas/odata-v4.json#/definitions/etag"
                },
                "@odata.id": {
                    "$ref": "/redfish/v1/Schemas/odata-v4.json#/definitions/id"
                },
                "@odata.type": {
                    "$ref": "/redfish/v1/Schemas/odata-v4.json#/definitions/type"
                },
                "Actions": {
                    "$ref": "#/definitions/Actions",
                    "description": "The available actions for this resource.",
                    "longDescription": "The Actions property shall contain the available actions for this resource."
                },
                "Description": {
                    "anyOf": [
                        {
                            "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Description"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "readonly": true
                },
                "Id": {
                    "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Id",
                    "readonly": true
                },
                "Name": {
                    "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Name",
                    "readonly": true
                },
                "Oem": {
                    "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Oem",
                    "description": "The OEM extension property.",
                    "longDescription": "This property shall contain the OEM extensions.  All values for properties that this object contains shall conform to the Redfish Specification-described requirements."
                }
            },
            "required": [
                "@odata.id",
                "@odata.type",
                "Id",
                "Name"
            ],
            "type": "object"
        },
        "DisableSEKM": {
            "additionalProperties": false,
            "description": "Disable SEKM on iDRAC",
            "longDescription": "Disable SEKM on iDRAC",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_4_0"
        },
        "DisableiLKM": {
            "additionalProperties": false,
            "description": "This method is used to Disable iLKM.",
            "longDescription": "This method is used to Disable iLKM.",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_4_0"
        },
        "EnableSEKM": {
            "additionalProperties": false,
            "description": "Enable SEKM on iDRAC",
            "longDescription": "Enable SEKM on iDRAC",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_4_0"
        },
        "EnableiLKM": {
            "additionalProperties": false,
            "description": "This method is used to Enable iLKM.",
            "longDescription": "This method is used to Enable iLKM.",
            "parameters": {
                "KeyID": {
                    "description": "Specifies the Key ID.",
                    "longDescription": "Specifies the Key ID.",
                    "type": "string"
                },
                "Passphrase": {
                    "description": "Specifies the Passphrase.",
                    "longDescription": "Specifies the Passphrase.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_4_0"
        },
        "ExportCertificate": {
            "additionalProperties": false,
            "description": "This method is used to export the certificate from the idrac, based on input parameter CertificateType. ExportCertificate returns the certificate file path.",
            "longDescription": "This method is used to export the certificate from the idrac, based on input parameter CertificateType. ExportCertificate returns the certificate file path.",
            "parameters": {
                "CertificateType": {
                    "$ref": "/redfish/v1/Schemas/DelliDRACCardService.json#/definitions/CertificateType",
                    "description": "The type of the certificate to be exported.",
                    "longDescription": "The type of the certificate to be exported."
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExportSSLCertificate": {
            "actionResponse": {
                "$ref": "#/definitions/ExportSSLCertificateResponse"
            },
            "additionalProperties": false,
            "description": "This method is used to export the ssl certificate from the idrac, based on input parameter Type. ExportSSLCertificate returns the certificate.",
            "longDescription": "This method is used to export the ssl certificate from the idrac, based on input parameter Type. ExportSSLCertificate returns the certificate.",
            "parameters": {
                "SSLCertType": {
                    "$ref": "/redfish/v1/Schemas/DelliDRACCardService.json#/definitions/SSLCertType",
                    "description": "The type of the certificate to be exported.",
                    "longDescription": "The type of the certificate to be exported."
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExportSSLCertificateResponse": {
            "additionalProperties": false,
            "description": "The response body for the ExportSSLCertificate action.",
            "longDescription": "This type shall contain the properties found in the response body for the ExportSSLCertificate action.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "CertificateFile": {
                    "description": "Exported certificate file encoded in base64.",
                    "longDescription": "Exported certificate file encoded in base64.",
                    "readonly": true,
                    "type": "string"
                }
            },
            "required": [
                "CertificateFile"
            ],
            "type": "object"
        },
        "FactoryIdentityCertificateGenerateCSR": {
            "actionResponse": {
                "$ref": "#/definitions/FactoryIdentityCertificateGenerateCSRResponse"
            },
            "additionalProperties": false,
            "description": "The FactoryIdentityCertificateGenerateCSR() method is used to Generate CSR for Factory Identity certificate.",
            "longDescription": "The FactoryIdentityCertificateGenerateCSR() method is used to Generate CSR for Factory Identity certificate.",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_2_0"
        },
        "FactoryIdentityCertificateGenerateCSRResponse": {
            "additionalProperties": false,
            "description": "The response body for the FactoryIdentityCertificateGenerateCSR action.",
            "longDescription": "This type shall contain the properties found in the response body for the FactoryIdentityCertificateGenerateCSR action.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "CSRString": {
                    "description": "This property shall contain the Privacy Enhanced Mail (PEM)-encoded string, which contains RFC2986-specified structures, of the certificate signing request. The private key should not be part of the string.",
                    "longDescription": "This property shall contain the Privacy Enhanced Mail (PEM)-encoded string, which contains RFC2986-specified structures, of the certificate signing request. The private key should not be part of the string.",
                    "readonly": true,
                    "type": "string",
                    "versionAdded": "v1_2_0"
                }
            },
            "required": [
                "CSRString"
            ],
            "type": "object"
        },
        "FactoryIdentityExportCertificate": {
            "additionalProperties": false,
            "description": "The FactoryIdentityExportCertificate() method is used to export factory identity certificate.",
            "longDescription": "The FactoryIdentityExportCertificate() method is used to export factory identity certificate.",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_2_0"
        },
        "FactoryIdentityImportCertificate": {
            "additionalProperties": false,
            "description": "The FactoryIdentityImportCertificate() method is used to import factory Identity certificate.",
            "longDescription": "The FactoryIdentityImportCertificate() method is used to import factory Identity certificate.",
            "parameters": {
                "CertificateString": {
                    "description": "A base 64 encoded string of the Certificate file.",
                    "longDescription": "A base 64 encoded string of the Certificate file.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_2_0"
        },
        "GenerateSEKMCSR": {
            "additionalProperties": false,
            "description": "This method is used to create the SEKM certificate signing request(CSR) and return the certificate file. The certificate file should be signed by an authority. Note: For creating the CSR, the following DelliDRACCardString attributes under SEKMCert group must be configured. 1.CommonName, 2.OrganizationUnit, 3.LocalityName, 4.StateName, 5. CountryCode, 6. EmailAddress, 7.OrganizationName and optional attributes are 1.SubjectAltName 2.UserId.",
            "longDescription": "This method is used to create the SEKM certificate signing request(CSR) and return the certificate file. The certificate file should be signed by an authority. Note: For creating the CSR, the following DelliDRACCardString attributes under SEKMCert group must be configured. 1.CommonName, 2.OrganizationUnit, 3.LocalityName, 4.StateName, 5. CountryCode, 6. EmailAddress, 7.OrganizationName and optional attributes are 1.SubjectAltName 2.UserId.",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "GetKVMSession": {
            "actionResponse": {
                "$ref": "#/definitions/GetKVMSessionResponse"
            },
            "additionalProperties": false,
            "description": "This method is used to get the Temporary credentials for the vKVM Session.",
            "longDescription": "This method is used to get the Temporary credentials for the vKVM Session.",
            "parameters": {
                "SessionTypeName": {
                    "description": "A random string value upto 32 bytes.",
                    "longDescription": "A random string value upto 32 bytes.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_3_0"
        },
        "GetKVMSessionResponse": {
            "additionalProperties": false,
            "description": "The response body for the GetKVMSession action.",
            "longDescription": "This type shall contain the properties found in the response body for the GetKVMSession action.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "TempPassword": {
                    "description": "Temporary password credential.",
                    "longDescription": "Temporary password credential.",
                    "readonly": true,
                    "type": "string",
                    "versionAdded": "v1_3_0"
                },
                "TempUsername": {
                    "description": "Temporary user name credential.",
                    "longDescription": "Temporary user name credential.",
                    "readonly": true,
                    "type": "string",
                    "versionAdded": "v1_3_0"
                }
            },
            "required": [
                "TempPassword",
                "TempUsername"
            ],
            "type": "object"
        },
        "ImportCertificate": {
            "additionalProperties": false,
            "description": "This method is used to import the certificate to iDRAC, on the basis of input parameter CertificateType.",
            "longDescription": "This method is used to import the certificate to iDRAC, on the basis of input parameter CertificateType.",
            "parameters": {
                "CertificateFile": {
                    "description": "A base 64 encoded string of the Certificate file.",
                    "longDescription": "A base 64 encoded string of the Certificate file.",
                    "type": "string"
                },
                "CertificateType": {
                    "$ref": "/redfish/v1/Schemas/DelliDRACCardService.json#/definitions/CertificateType",
                    "description": "Type of the certificate to be imported.",
                    "longDescription": "Type of the certificate to be imported."
                },
                "Instance": {
                    "description": "This parameter represent the instance number. Applicable only for CertificateType RSYSLOG_SERVER_CA and max 2 instance are allowed to store.",
                    "longDescription": "This parameter represent the instance number. Applicable only for CertificateType RSYSLOG_SERVER_CA and max 2 instance are allowed to store.",
                    "type": "integer"
                },
                "Passphrase": {
                    "description": "A passphrase for certificate file.",
                    "longDescription": "A passphrase for certificate file.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ImportSSLCertificate": {
            "additionalProperties": false,
            "description": "This method is used to import the ssl certificate to iDRAC, on the basis of input parameter Type. After importing the certificate, the iDRAC will automatically restart.",
            "longDescription": "This method is used to import the ssl certificate to iDRAC, on the basis of input parameter Type. After importing the certificate, the iDRAC will automatically restart.",
            "parameters": {
                "CertificateType": {
                    "$ref": "/redfish/v1/Schemas/DelliDRACCardService.json#/definitions/CertificateType",
                    "description": "Type of the certificate to be imported.",
                    "longDescription": "Type of the certificate to be imported."
                },
                "Passphrase": {
                    "description": "A passphrase for certificate file. Note: This is optional parameter for CSC certificate, and not required for Server and CA certificates.",
                    "longDescription": "A passphrase for certificate file. Note: This is optional parameter for CSC certificate, and not required for Server and CA certificates.",
                    "type": "string"
                },
                "SSLCertificateFile": {
                    "description": "A base 64 encoded string of the XML Certificate file. Note: For importing CSC certificate, user has to convert PKCS file to base64 format. Use the openssl command. The CTC file content has to be in PEM format (base 64 encoded).",
                    "longDescription": "A base 64 encoded string of the XML Certificate file. Note: For importing CSC certificate, user has to convert PKCS file to base64 format. Use the openssl command. The CTC file content has to be in PEM format (base 64 encoded).",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JoinGroup": {
            "additionalProperties": false,
            "description": "The method is used join an existing group providing the GroupPasscode.",
            "longDescription": "The method is used join an existing group providing the GroupPasscode.",
            "parameters": {
                "CloneConfiguration": {
                    "$ref": "/redfish/v1/Schemas/DelliDRACCardService.json#/definitions/CloneConfiguration",
                    "description": "Clones email alert configuration from the group once joined.0-Disable, 1-Enable.",
                    "longDescription": "Clones email alert configuration from the group once joined.0-Disable, 1-Enable."
                },
                "GroupName": {
                    "description": "Name of the group to be joined.",
                    "longDescription": "Name of the group to be joined.",
                    "type": "string"
                },
                "GroupPasscode": {
                    "description": "Passcode of the group to be joined.",
                    "longDescription": "Passcode of the group to be joined.",
                    "type": "string"
                },
                "GroupUUID": {
                    "description": "Unique Identifier of the group to be joined.",
                    "longDescription": "Unique Identifier of the group to be joined.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "Rekey": {
            "additionalProperties": false,
            "description": "This method is used to Rekey all the secure capable devices in iDRAC.",
            "longDescription": "This method is used to Rekey all the secure capable devices in iDRAC.",
            "parameters": {
                "Mode": {
                    "$ref": "/redfish/v1/Schemas/DelliDRACCardService.json#/definitions/Mode",
                    "description": "Specifies the security mode of iDRAC : 1 - iDrac Local Key Management (iLKM), 2 - Secure Enterprise Key Manager(SEKM).",
                    "longDescription": "Specifies the security mode of iDRAC : 1 - iDrac Local Key Management (iLKM), 2 - Secure Enterprise Key Manager(SEKM)."
                },
                "NewKeyId": {
                    "description": "new security key identifier for iLKM ",
                    "longDescription": "new security key identifier for iLKM ",
                    "type": "string"
                },
                "NewPassphrase": {
                    "description": "new security key passphrase for ILKM ",
                    "longDescription": "new security key passphrase for ILKM ",
                    "type": "string"
                },
                "OldPassphrase": {
                    "description": "Old security key passphrase iLKM",
                    "longDescription": "Old security key passphrase iLKM",
                    "type": "string"
                },
                "fqdd": {
                    "description": "Specifies the fqdd of the component. currently it supports only \"iDRAC.Embedded.1\".",
                    "longDescription": "Specifies the fqdd of the component. currently it supports only \"iDRAC.Embedded.1\".",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_3_0"
        },
        "RemoveSelf": {
            "additionalProperties": false,
            "description": "The method is used to remove the iDRAC from a group, that the iDRAC is a member of.",
            "longDescription": "The method is used to remove the iDRAC from a group, that the iDRAC is a member of.",
            "parameters": {
                "GroupName": {
                    "description": "Name of the group which the iDRAC is a part of.",
                    "longDescription": "Name of the group which the iDRAC is a part of.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "SSLResetCfg": {
            "additionalProperties": false,
            "description": "This method is used to restores the web-server certificate to factory defaults.",
            "longDescription": "This method is used to restores the web-server certificate to factory defaults.",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "SendTestEmailAlert": {
            "additionalProperties": false,
            "description": "This method is used to to send a test email alert for a particular attribute.",
            "longDescription": "This method is used to to send a test email alert for a particular attribute.",
            "parameters": {
                "InstanceID": {
                    "description": "The property shall have the value of the InstanceID property of the attribute for which the test email alert is generated.",
                    "longDescription": "The property shall have the value of the InstanceID property of the attribute for which the test email alert is generated.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "SendTestSNMPTrap": {
            "additionalProperties": false,
            "description": "This method is used to to send a test snmp alert for a particular attribute.",
            "longDescription": "This method is used to to send a test snmp alert for a particular attribute.",
            "parameters": {
                "InstanceID": {
                    "description": "The property shall have the value of the InstanceID property of the attribute for which the test email alert is generated.",
                    "longDescription": "The property shall have the value of the InstanceID property of the attribute for which the test email alert is generated.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "TestRsyslogServerConnection": {
            "additionalProperties": false,
            "description": "The TestRsyslogServerConnection() method is used to test rsylog connection from iDRAC, i.e Whether Test message from iDRAC is reaching to the the Rsyslog Listener or not .",
            "longDescription": "The TestRsyslogServerConnection() method is used to test rsylog connection from iDRAC, i.e Whether Test message from iDRAC is reaching to the the Rsyslog Listener or not .",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_1_0"
        },
        "TestSEKMServerConnection": {
            "additionalProperties": false,
            "description": "This method is used to test SEKM server connection.",
            "longDescription": "This method is used to test SEKM server connection.",
            "parameters": {
                "ServerIndex": {
                    "description": "Specifies the SEKM server index value and the possible values for PrimaryServer is 1 and for SecondaryServer is 1-8.",
                    "longDescription": "Specifies the SEKM server index value and the possible values for PrimaryServer is 1 and for SecondaryServer is 1-8.",
                    "type": "integer"
                },
                "ServerType": {
                    "$ref": "/redfish/v1/Schemas/DelliDRACCardService.json#/definitions/ServerType",
                    "description": "specifies the SEKM server type.",
                    "longDescription": "specifies the SEKM server type."
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_2_0"
        },
        "VerifyHWProofOfPossession": {
            "actionResponse": {
                "$ref": "#/definitions/VerifyHWProofOfPossessionResponse"
            },
            "additionalProperties": false,
            "description": "This method is used to verify hardware identity certificate (Factory certificate).",
            "longDescription": "This method is used to verify hardware identity certificate (Factory certificate).",
            "parameters": {
                "Algorithm": {
                    "$ref": "/redfish/v1/Schemas/DelliDRACCardService.json#/definitions/Algorithm",
                    "description": "The algorithm used to encrypt EncryptedChallenge.",
                    "longDescription": "The algorithm used to encrypt EncryptedChallenge."
                },
                "EncryptedChallenge": {
                    "description": "A string encrypted with the public key of the certificate.",
                    "longDescription": "A string encrypted with the public key of the certificate.",
                    "type": "string"
                },
                "HMAC": {
                    "description": "The Hash-based Message Authentication Code for the EncryptedChallenge.",
                    "longDescription": "The Hash-based Message Authentication Code for the EncryptedChallenge.",
                    "type": "string"
                },
                "InitialVector": {
                    "description": "A hexidecimal representation of the initial vector used for the EncryptedChallenge.",
                    "longDescription": "A hexidecimal representation of the initial vector used for the EncryptedChallenge.",
                    "type": "string"
                },
                "KeyDerivationFunction": {
                    "$ref": "/redfish/v1/Schemas/DelliDRACCardService.json#/definitions/KeyDerivationFunction",
                    "description": "The key derivation function used.",
                    "longDescription": "The key derivation function used."
                },
                "PublicKey": {
                    "description": "A hexidecimal representation of the public key used to encrypt the EncryptedChallenge.",
                    "longDescription": "A hexidecimal representation of the public key used to encrypt the EncryptedChallenge.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_2_0"
        },
        "VerifyHWProofOfPossessionResponse": {
            "additionalProperties": false,
            "description": "The response body for the VerifyHWProofOfPossession action.",
            "longDescription": "This type shall contain the properties found in the response body for the VerifyHWProofOfPossession action.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "EncryptedResponse": {
                    "description": "A base64 encoded string encrypted with the private key of the certificate.",
                    "longDescription": "A base64 encoded string encrypted with the private key of the certificate.",
                    "readonly": true,
                    "type": "string",
                    "versionAdded": "v1_2_0"
                }
            },
            "required": [
                "EncryptedResponse"
            ],
            "type": "object"
        },
        "iDRACReset": {
            "additionalProperties": false,
            "description": "This method is used to reset iDRAC .",
            "longDescription": "This method is used to reset iDRAC .",
            "parameters": {
                "Force": {
                    "$ref": "/redfish/v1/Schemas/DelliDRACCardService.json#/definitions/Force",
                    "description": "This option is used to reset the iDRAC by force or gracefully.",
                    "longDescription": "This option is used to reset the iDRAC by force or gracefully."
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "iDRACResetCfg": {
            "additionalProperties": false,
            "description": "This method is used to reset the iDRAC to factory default configurations.",
            "longDescription": "This method is used to reset the iDRAC to factory default configurations.",
            "parameters": {
                "Force": {
                    "$ref": "/redfish/v1/Schemas/DelliDRACCardService.json#/definitions/Force",
                    "description": "This option is used to reset the iDRAC to factory defaults by force or gracefully.",
                    "longDescription": "This option is used to reset the iDRAC to factory defaults by force or gracefully."
                },
                "Preserve": {
                    "$ref": "/redfish/v1/Schemas/DelliDRACCardService.json#/definitions/Preserve",
                    "description": "Preserve= 0 (Default)-reset all configuration to default except network and users. Preserve=1 (All)-reset all configuration to default including network and users. Preserve=2 (ResetAllWithRootDefaults)  - reset all configuration to default including network preserve default user as root calvin.",
                    "longDescription": "Preserve= 0 (Default)-reset all configuration to default except network and users. Preserve=1 (All)-reset all configuration to default including network and users. Preserve=2 (ResetAllWithRootDefaults)  - reset all configuration to default including network preserve default user as root calvin."
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "iLKMToSEKMTransition": {
            "additionalProperties": false,
            "description": "This method is used to iLKM To SEKM Transition.",
            "longDescription": "This method is used to iLKM To SEKM Transition.",
            "parameters": {
                "KeyID": {
                    "description": "Specifies the Key ID.",
                    "longDescription": "Specifies the Key ID.",
                    "type": "string"
                },
                "Passphrase": {
                    "description": "Specifies the Passphrase.",
                    "longDescription": "Specifies the Passphrase.",
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_4_0"
        }
    },
    "owningEntity": "Dell",
    "title": "#DelliDRACCardService.v1_4_0.DelliDRACCardService"
}