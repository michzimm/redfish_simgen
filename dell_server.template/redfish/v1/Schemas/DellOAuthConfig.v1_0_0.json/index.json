{
    "$id": "/redfish/v1/Schemas/DellOAuthConfig.v1_0_0.json",
    "$schema": "/redfish/v1/Schemas/redfish-schema-v1.json",
    "copyright": "Copyright 2014-2020 Dell, Inc. or its subsidiaries. All Rights Reserved.",
    "definitions": {
        "Actions": {
            "additionalProperties": false,
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "#DellOAuthConfig.SubmitTestToken": {
                    "$ref": "#/definitions/SubmitTestToken"
                }
            },
            "type": "object"
        },
        "OAuthConfig": {
            "additionalProperties": false,
            "description": "OAuth Authentication configurations for both online and offline modes.",
            "longDescription": "OAuth Authentication configurations for both online and offline modes.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "OAuthConfig": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/OAuthConfigInfo"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "OAuth Authentication configurations for both online and offline modes.",
                    "longDescription": "OAuth Authentication configurations for both online and offline modes."
                }
            },
            "type": "object"
        },
        "OAuthConfigInfo": {
            "additionalProperties": false,
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "HttpsCertificate": {
                    "description": "Delegated Authentication HTTP Public Certificate used by the Authorization Server. Is RequiredOnCreate if 'ServerURL' is specified.",
                    "longDescription": "Delegated Authentication HTTP Public Certificate used by the Authorization Server. Is RequiredOnCreate if 'ServerURL' is specified.",
                    "readonly": false,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "Issuer": {
                    "description": "Issuer string  value in tokens signed by the configured static key (s). Is RequiredOnCreate if 'PublicSigningKey' is specified.",
                    "longDescription": "Issuer string  value in tokens signed by the configured static key (s). Is RequiredOnCreate if 'PublicSigningKey' is specified.",
                    "readonly": false,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "NameTag": {
                    "description": "A user defined name of the Delegated Auth instance. On POST Create, one or both of the following pairs of parameters are required to be provided along with this in the POST body; 'HttpsCertificate' paired with 'ServerURL' and/or 'Issuer' paired with 'PublicSigningKey'.",
                    "longDescription": "A user defined name of the Delegated Auth instance. On POST Create, one or both of the following pairs of parameters are required to be provided along with this in the POST body; 'HttpsCertificate' paired with 'ServerURL' and/or 'Issuer' paired with 'PublicSigningKey'.",
                    "readonly": false,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "PublicSigningKey": {
                    "description": "The public signing key as defined in rfc7517 or a JWK set document as specified in rfc8414. Is RequiredOnCreate if 'Issuer' is specified.",
                    "longDescription": "The public signing key as defined in rfc7517 or a JWK set document as specified in rfc8414. Is RequiredOnCreate if 'Issuer' is specified.",
                    "readonly": false,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "ServerURL": {
                    "description": "The Oauth Metadata document URL of the Authorization Server. Is RequiredOnCreate if 'HttpsCertificate' is specified.",
                    "longDescription": "The Oauth Metadata document URL of the Authorization Server. Is RequiredOnCreate if 'HttpsCertificate' is specified.",
                    "readonly": false,
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "requiredOnCreate": [
                "NameTag"
            ],
            "type": "object"
        },
        "SubmitTestToken": {
            "additionalProperties": false,
            "description": "The SubmitTestToken operation shall test the supplied Token against the OAuth Configurations present in OAuthConfig.",
            "longDescription": "The SubmitTestToken operation shall test the supplied Token against the OAuth Configurations present in OAuthConfig.",
            "parameters": {
                "ForceDownload": {
                    "description": "Boolean value to force the Resource Server to re-download any cached metadata. This parameter is ignored for offline mode.",
                    "longDescription": "Boolean value to force the Resource Server to re-download any cached metadata. This parameter is optional for offline mode and shall be ignored if provided.",
                    "type": "boolean"
                },
                "Token": {
                    "description": "String value containing a generated access token signed by one of the configured authorization servers.",
                    "longDescription": "String value containing a generated access token signed by one of the configured authorization servers.",
                    "requiredParameter": true,
                    "type": "string"
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "owningEntity": "Dell",
    "title": "#DellOAuthConfig.v1_0_0"
}